{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CreateQuizComponent = class CreateQuizComponent {\n  constructor(quizService, router) {\n    this.quizService = quizService;\n    this.router = router;\n    this.quiz = {\n      title: '',\n      questions: [],\n      createdDate: new Date(),\n      creator: '',\n      status: 'Draft',\n      maxAttempts: 1,\n      showAnswers: false,\n      showScore: false,\n      passMark: 0,\n      scheduleDate: new Date(),\n      durationInSeconds: 0,\n      randomizeQuestions: false\n    };\n  }\n  addQuestion() {\n    const newQuestion = {\n      text: '',\n      options: [],\n      correctAnswerIndex: -1\n    }; // Default empty question\n    this.quiz.questions.push(newQuestion);\n  }\n  saveQuiz() {\n    // Update or create based on the quiz's presence in the database\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\n    operation.subscribe(response => {\n      console.log('Quiz saved successfully', response);\n      this.router.navigate(['/quiz-list']);\n    }, error => {\n      console.error('Error saving quiz', error);\n    });\n  }\n};\nCreateQuizComponent = __decorate([Component({\n  selector: 'app-create-quiz',\n  templateUrl: './create-quiz.component.html',\n  styleUrls: ['./create-quiz.component.css']\n})], CreateQuizComponent);\nexport { CreateQuizComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAgB9BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAf5D,KAAAC,IAAI,GAAQ;MACVC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,OAAO;MACfC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,CAAC;MACXC,YAAY,EAAE,IAAIP,IAAI,EAAE;MACxBQ,iBAAiB,EAAE,CAAC;MACpBC,kBAAkB,EAAE;KACrB;EAEsE;EAEvEC,WAAWA,CAAA;IACT,MAAMC,WAAW,GAAG;MAAEC,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,kBAAkB,EAAE,CAAC;IAAC,CAAE,CAAC,CAAC;IACvE,IAAI,CAAClB,IAAI,CAACE,SAAS,CAACiB,IAAI,CAACJ,WAAW,CAAC;EACvC;EAEAK,QAAQA,CAAA;IACN;IACA,MAAMC,SAAS,GAAG,IAAI,CAACrB,IAAI,CAACsB,EAAE,GAAG,IAAI,CAACxB,WAAW,CAACyB,UAAU,CAAC,IAAI,CAACvB,IAAI,CAACsB,EAAE,EAAE,IAAI,CAACtB,IAAI,CAAC,GAAG,IAAI,CAACF,WAAW,CAAC0B,UAAU,CAAC,IAAI,CAACxB,IAAI,CAAC;IAE9HqB,SAAS,CAACI,SAAS,CAACC,QAAQ,IAAG;MAC7BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;MAChD,IAAI,CAAC3B,MAAM,CAAC8B,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EAAEC,KAAK,IAAG;MACTH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;CAID;AArCYlC,mBAAmB,GAAAmC,UAAA,EAL/BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWtC,mBAAmB,CAqC/B;SArCYA,mBAAmB","names":["Component","CreateQuizComponent","constructor","quizService","router","quiz","title","questions","createdDate","Date","creator","status","maxAttempts","showAnswers","showScore","passMark","scheduleDate","durationInSeconds","randomizeQuestions","addQuestion","newQuestion","text","options","correctAnswerIndex","push","saveQuiz","operation","id","updateQuiz","createQuiz","subscribe","response","console","log","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service'; \r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-quiz',\r\n  templateUrl: './create-quiz.component.html',\r\n  styleUrls: ['./create-quiz.component.css']\r\n})\r\nexport class CreateQuizComponent {\r\n  quiz: any = {\r\n    title: '',\r\n    questions: [],\r\n    createdDate: new Date(), // Assuming handling on the frontend for simplicity\r\n    creator: '', // This should be set based on the logged-in user or similar\r\n    status: 'Draft', // Default status\r\n    maxAttempts: 1,\r\n    showAnswers: false,\r\n    showScore: false,\r\n    passMark: 0,\r\n    scheduleDate: new Date(), // Set a default or use a date picker in the UI\r\n    durationInSeconds: 0,\r\n    randomizeQuestions: false\r\n  };\r\n\r\n  constructor(private quizService: QuizService, private router: Router) {}\r\n\r\n  addQuestion(): void {\r\n    const newQuestion = { text: '', options: [], correctAnswerIndex: -1 }; // Default empty question\r\n    this.quiz.questions.push(newQuestion);\r\n  }\r\n\r\n  saveQuiz(): void {\r\n    // Update or create based on the quiz's presence in the database\r\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\r\n    \r\n    operation.subscribe(response => {\r\n      console.log('Quiz saved successfully', response);\r\n      this.router.navigate(['/quiz-list']);\r\n    }, error => {\r\n      console.error('Error saving quiz', error);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}