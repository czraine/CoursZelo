{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CreateQuizComponent_div_9_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\")(2, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_div_5_div_1_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const question_r5 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r5.correctAnswerIndex = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_div_5_div_1_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const oIndex_r9 = restoredCtx.index;\n      const question_r5 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r5.options[oIndex_r9] = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const oIndex_r9 = ctx.index;\n    const ctx_r15 = i0.ɵɵnextContext();\n    const qIndex_r6 = ctx_r15.index;\n    const question_r5 = ctx_r15.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"correctAnswer-\", qIndex_r6, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r5.correctAnswerIndex)(\"value\", oIndex_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Option \", oIndex_r9 + 1, \": \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"name\", \"option-\", qIndex_r6, \"-\", oIndex_r9, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r5.options[oIndex_r9]);\n  }\n}\nfunction CreateQuizComponent_div_9_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateQuizComponent_div_9_div_5_div_1_Template, 5, 7, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r5.options);\n  }\n}\nfunction CreateQuizComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"label\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const question_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(question_r2.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, CreateQuizComponent_div_9_div_5_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementStart(6, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CreateQuizComponent_div_9_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.addQuestion());\n    });\n    i0.ɵɵtext(7, \"Add Question\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 10);\n    i0.ɵɵtext(10, \"Max Attempts:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.quiz.maxAttempts = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 12);\n    i0.ɵɵtext(14, \"Show Answers:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.quiz.showAnswers = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 14);\n    i0.ɵɵtext(18, \"Show Score:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.quiz.showScore = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 16);\n    i0.ɵɵtext(22, \"Pass Mark:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.quiz.passMark = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 18);\n    i0.ɵɵtext(26, \"Schedule Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.quiz.scheduleDate = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 20);\n    i0.ɵɵtext(30, \"Duration (in seconds)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_31_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.quiz.durationInSeconds = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 3)(33, \"label\", 22);\n    i0.ɵɵtext(34, \"Randomize Questions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_35_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.quiz.randomizeQuestions = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"button\", 24);\n    i0.ɵɵtext(37, \"Save Quiz\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const qIndex_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"question-\", qIndex_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Question \", qIndex_r3 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"question-\", qIndex_r3, \"\")(\"name\", \"question-\", qIndex_r3, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.quiz.questions);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.maxAttempts);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.showAnswers);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.showScore);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.passMark);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.scheduleDate);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.durationInSeconds);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quiz.randomizeQuestions);\n  }\n}\nexport class CreateQuizComponent {\n  constructor(quizService, router) {\n    this.quizService = quizService;\n    this.router = router;\n    this.quiz = {\n      title: '',\n      questions: [],\n      createdDate: new Date(),\n      creator: '',\n      status: 'Draft',\n      maxAttempts: 1,\n      showAnswers: false,\n      showScore: false,\n      passMark: 0,\n      scheduleDate: new Date(),\n      durationInSeconds: 0,\n      randomizeQuestions: false\n    };\n  }\n  addQuestion() {\n    const newQuestion = {\n      text: '',\n      options: [],\n      correctAnswerIndex: -1\n    }; // Default empty question\n    this.quiz.questions.push(newQuestion);\n  }\n  saveQuiz() {\n    // Update or create based on the quiz's presence in the database\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\n    operation.subscribe(response => {\n      console.log('Quiz saved successfully', response);\n      this.router.navigate(['/quiz-list']);\n    }, error => {\n      console.error('Error saving quiz', error);\n    });\n  }\n  static #_ = this.ɵfac = function CreateQuizComponent_Factory(t) {\n    return new (t || CreateQuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateQuizComponent,\n    selectors: [[\"app-create-quiz\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"quiz-management-container\"], [3, \"ngSubmit\"], [\"quizForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"for\"], [\"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"for\", \"maxAttempts\"], [\"type\", \"number\", \"id\", \"maxAttempts\", \"name\", \"maxAttempts\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"showAnswers\"], [\"type\", \"checkbox\", \"id\", \"showAnswers\", \"name\", \"showAnswers\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"showScore\"], [\"type\", \"checkbox\", \"id\", \"showScore\", \"name\", \"showScore\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"passMark\"], [\"type\", \"number\", \"id\", \"passMark\", \"name\", \"passMark\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"scheduleDate\"], [\"type\", \"datetime-local\", \"id\", \"scheduleDate\", \"name\", \"scheduleDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"durationInSeconds\"], [\"type\", \"number\", \"id\", \"durationInSeconds\", \"name\", \"durationInSeconds\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"randomizeQuestions\"], [\"type\", \"checkbox\", \"id\", \"randomizeQuestions\", \"name\", \"randomizeQuestions\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"ngModel\", \"value\", \"name\", \"ngModelChange\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"name\", \"ngModelChange\"]],\n    template: function CreateQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateQuizComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.saveQuiz();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.quiz.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, CreateQuizComponent_div_9_Template, 38, 13, \"div\", 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.quiz.id ? \"Edit\" : \"Create\", \" Quiz\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quiz.questions);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.CheckboxControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 800px;\\r\\n    margin: auto;\\r\\n    padding: 1rem;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 1rem;\\r\\n  }\\r\\n  \\r\\n  .form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 0.5rem;\\r\\n    margin-top: 0.25rem;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 0.25rem;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%] {\\r\\n    padding: 0.5rem 1rem;\\r\\n    border: none;\\r\\n    border-radius: 0.25rem;\\r\\n    cursor: pointer;\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\r\\n  \\r\\n  .questions-section[_ngcontent-%COMP%] {\\r\\n    border-top: 2px solid #eee;\\r\\n    padding-top: 1rem;\\r\\n    margin-top: 1rem;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS1xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0NBQWtDO0FBQ2xDO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSwwQkFBMEI7SUFDMUIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJjcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogcXVpei1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MgKi9cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tY29udHJvbCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDAuNXJlbTtcclxuICAgIG1hcmdpbi10b3A6IDAuMjVyZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmJ0biB7XHJcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuYnRuOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgfVxyXG4gIFxyXG4gIC5xdWVzdGlvbnMtc2VjdGlvbiB7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgI2VlZTtcclxuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICB9XHJcbiAgIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVpei9jcmVhdGUtcXVpei9jcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtDQUFrQztBQUNsQztJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtFQUNmOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsMEJBQTBCO0lBQzFCLGlCQUFpQjtJQUNqQixnQkFBZ0I7RUFDbEI7O0FBRUYsZ2xEQUFnbEQiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBxdWl6LW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyAqL1xyXG4uY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1jb250cm9sIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgbWFyZ2luLXRvcDogMC4yNXJlbTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gIH1cclxuICBcclxuICAuYnRuIHtcclxuICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9ucy1zZWN0aW9uIHtcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjZWVlO1xyXG4gICAgcGFkZGluZy10b3A6IDFyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;IAwBQA,EAAA,CAAAC,cAAA,aAAoF;IAE5DD,EAAA,CAAAE,UAAA,2BAAAC,8EAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,IAAA;MAAA,MAAAC,WAAA,GAAAP,EAAA,CAAAQ,aAAA,GAAAC,SAAA;MAAA,OAAaT,EAAA,CAAAU,WAAA,CAAAH,WAAA,CAAAI,kBAAA,GAAAP,MAAA,CAAmC;IAAA,EAAP;IAA7DJ,EAAA,CAAAY,YAAA,EAA+G;IAC/GZ,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IACRZ,EAAA,CAAAC,cAAA,gBAAmH;IAA3ED,EAAA,CAAAE,UAAA,2BAAAY,8EAAAV,MAAA;MAAA,MAAAW,WAAA,GAAAf,EAAA,CAAAK,aAAA,CAAAC,IAAA;MAAA,MAAAU,SAAA,GAAAD,WAAA,CAAAE,KAAA;MAAA,MAAAV,WAAA,GAAAP,EAAA,CAAAQ,aAAA,GAAAC,SAAA;MAAA,OAAAT,EAAA,CAAAU,WAAA,CAAAH,WAAA,CAAAW,OAAA,CAAAF,SAAA,IAAAZ,MAAA;IAAA,EAAsC;IAA9EJ,EAAA,CAAAY,YAAA,EAAmH;;;;;;;IAHlCZ,EAAA,CAAAmB,SAAA,GAA+B;IAA/BnB,EAAA,CAAAoB,sBAAA,2BAAAC,SAAA,KAA+B;IAA1FrB,EAAA,CAAAsB,UAAA,YAAAf,WAAA,CAAAI,kBAAA,CAAyC,UAAAK,SAAA;IAC7DhB,EAAA,CAAAmB,SAAA,GACF;IADEnB,EAAA,CAAAuB,kBAAA,aAAAP,SAAA,WACF;IAC+EhB,EAAA,CAAAmB,SAAA,GAAmC;IAAnCnB,EAAA,CAAAwB,sBAAA,oBAAAH,SAAA,OAAAL,SAAA,KAAmC;IAA1EhB,EAAA,CAAAsB,UAAA,YAAAf,WAAA,CAAAW,OAAA,CAAAF,SAAA,EAAsC;;;;;IATpFhB,EAAA,CAAAC,cAAA,UAAiE;IAI7DD,EAAA,CAAAyB,UAAA,IAAAC,8CAAA,kBAMM;IACR1B,EAAA,CAAAY,YAAA,EAAM;;;;IAPoBZ,EAAA,CAAAmB,SAAA,GAAqB;IAArBnB,EAAA,CAAAsB,UAAA,YAAAf,WAAA,CAAAW,OAAA,CAAqB;;;;;;IAZ/ClB,EAAA,CAAAC,cAAA,UAAiE;IAG5BD,EAAA,CAAAa,MAAA,GAAuB;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAChEZ,EAAA,CAAAC,cAAA,eAAiI;IAAhED,EAAA,CAAAE,UAAA,2BAAAyB,kEAAAvB,MAAA;MAAA,MAAAW,WAAA,GAAAf,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAC,WAAA,GAAAd,WAAA,CAAAN,SAAA;MAAA,OAAaT,EAAA,CAAAU,WAAA,CAAAmB,WAAA,CAAAC,IAAA,GAAA1B,MAAA,CAAqB;IAAA,EAAP;IAA5FJ,EAAA,CAAAY,YAAA,EAAiI;IAIvIZ,EAAA,CAAAyB,UAAA,IAAAM,wCAAA,iBAWQ;IAEN/B,EAAA,CAAAC,cAAA,gBAAwE;IAAxBD,EAAA,CAAAE,UAAA,mBAAA8B,2DAAA;MAAAhC,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAK,OAAA,GAAAjC,EAAA,CAAAQ,aAAA;MAAA,OAASR,EAAA,CAAAU,WAAA,CAAAuB,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAAClC,EAAA,CAAAa,MAAA,mBAAY;IAAAb,EAAA,CAAAY,YAAA,EAAS;IAG7FZ,EAAA,CAAAC,cAAA,aAAwB;IACGD,EAAA,CAAAa,MAAA,qBAAa;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAC9CZ,EAAA,CAAAC,cAAA,iBAAsH;IAA3DD,EAAA,CAAAE,UAAA,2BAAAiC,mEAAA/B,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAQ,OAAA,GAAApC,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAA0B,OAAA,CAAAC,IAAA,CAAAC,WAAA,GAAAlC,MAAA,CAAwB;IAAA,EAAP;IAAzFJ,EAAA,CAAAY,YAAA,EAAsH;IAIxHZ,EAAA,CAAAC,cAAA,cAAwB;IACGD,EAAA,CAAAa,MAAA,qBAAa;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAC9CZ,EAAA,CAAAC,cAAA,iBAA0F;IAAlDD,EAAA,CAAAE,UAAA,2BAAAqC,mEAAAnC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAY,OAAA,GAAAxC,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAA8B,OAAA,CAAAH,IAAA,CAAAI,WAAA,GAAArC,MAAA,CAAwB;IAAA,EAAP;IAAtEJ,EAAA,CAAAY,YAAA,EAA0F;IAI5FZ,EAAA,CAAAC,cAAA,cAAwB;IACCD,EAAA,CAAAa,MAAA,mBAAW;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAC1CZ,EAAA,CAAAC,cAAA,iBAAoF;IAA9CD,EAAA,CAAAE,UAAA,2BAAAwC,mEAAAtC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAe,OAAA,GAAA3C,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAAiC,OAAA,CAAAN,IAAA,CAAAO,SAAA,GAAAxC,MAAA,CAAsB;IAAA,EAAP;IAAlEJ,EAAA,CAAAY,YAAA,EAAoF;IAItFZ,EAAA,CAAAC,cAAA,cAAwB;IACAD,EAAA,CAAAa,MAAA,kBAAU;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IACxCZ,EAAA,CAAAC,cAAA,iBAA6G;IAArDD,EAAA,CAAAE,UAAA,2BAAA2C,mEAAAzC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAkB,OAAA,GAAA9C,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAAoC,OAAA,CAAAT,IAAA,CAAAU,QAAA,GAAA3C,MAAA,CAAqB;IAAA,EAAP;IAAnFJ,EAAA,CAAAY,YAAA,EAA6G;IAK/GZ,EAAA,CAAAC,cAAA,cAAwB;IACID,EAAA,CAAAa,MAAA,qBAAa;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAC/CZ,EAAA,CAAAC,cAAA,iBAAwH;IAApDD,EAAA,CAAAE,UAAA,2BAAA8C,mEAAA5C,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAqB,OAAA,GAAAjD,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAAuC,OAAA,CAAAZ,IAAA,CAAAa,YAAA,GAAA9C,MAAA,CAAyB;IAAA,EAAP;IAAnGJ,EAAA,CAAAY,YAAA,EAAwH;IAI1HZ,EAAA,CAAAC,cAAA,cAAwB;IACSD,EAAA,CAAAa,MAAA,6BAAqB;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAC5DZ,EAAA,CAAAC,cAAA,iBAAwI;IAAvED,EAAA,CAAAE,UAAA,2BAAAiD,mEAAA/C,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAwB,OAAA,GAAApD,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAA0C,OAAA,CAAAf,IAAA,CAAAgB,iBAAA,GAAAjD,MAAA,CAA8B;IAAA,EAAP;IAArGJ,EAAA,CAAAY,YAAA,EAAwI;IAI1IZ,EAAA,CAAAC,cAAA,cAAwB;IACUD,EAAA,CAAAa,MAAA,2BAAmB;IAAAb,EAAA,CAAAY,YAAA,EAAQ;IAC3DZ,EAAA,CAAAC,cAAA,iBAA+G;IAAhED,EAAA,CAAAE,UAAA,2BAAAoD,mEAAAlD,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAA2B,OAAA,GAAAvD,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAU,WAAA,CAAA6C,OAAA,CAAAlB,IAAA,CAAAmB,kBAAA,GAAApD,MAAA,CAA+B;IAAA,EAAP;IAApFJ,EAAA,CAAAY,YAAA,EAA+G;IAIjHZ,EAAA,CAAAC,cAAA,kBAA8C;IAAAD,EAAA,CAAAa,MAAA,iBAAS;IAAAb,EAAA,CAAAY,YAAA,EAAS;;;;;;IAhErDZ,EAAA,CAAAmB,SAAA,GAAyB;IAAzBnB,EAAA,CAAAoB,sBAAA,qBAAAqC,SAAA,KAAyB;IAACzD,EAAA,CAAAmB,SAAA,GAAuB;IAAvBnB,EAAA,CAAAuB,kBAAA,cAAAkC,SAAA,SAAuB;IACrCzD,EAAA,CAAAmB,SAAA,GAAwB;IAAxBnB,EAAA,CAAAoB,sBAAA,oBAAAqC,SAAA,KAAwB,sBAAAA,SAAA;IAAsBzD,EAAA,CAAAsB,UAAA,YAAAO,WAAA,CAAAC,IAAA,CAA2B;IAIxE9B,EAAA,CAAAmB,SAAA,GAAmB;IAAnBnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAsB,SAAA,CAAmB;IAkBkB3D,EAAA,CAAAmB,SAAA,GAA8B;IAA9BnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAC,WAAA,CAA8B;IAMjDtC,EAAA,CAAAmB,SAAA,GAA8B;IAA9BnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAI,WAAA,CAA8B;IAMhCzC,EAAA,CAAAmB,SAAA,GAA4B;IAA5BnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAO,SAAA,CAA4B;IAMV5C,EAAA,CAAAmB,SAAA,GAA2B;IAA3BnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAU,QAAA,CAA2B;IAOf/C,EAAA,CAAAmB,SAAA,GAA+B;IAA/BnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAa,YAAA,CAA+B;IAMlClD,EAAA,CAAAmB,SAAA,GAAoC;IAApCnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAgB,iBAAA,CAAoC;IAMtDrD,EAAA,CAAAmB,SAAA,GAAqC;IAArCnB,EAAA,CAAAsB,UAAA,YAAAoC,MAAA,CAAArB,IAAA,CAAAmB,kBAAA,CAAqC;;;AClE5F,OAAM,MAAOI,mBAAmB;EAgB9BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAf5D,KAAA1B,IAAI,GAAQ;MACV2B,KAAK,EAAE,EAAE;MACTL,SAAS,EAAE,EAAE;MACbM,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,OAAO;MACf9B,WAAW,EAAE,CAAC;MACdG,WAAW,EAAE,KAAK;MAClBG,SAAS,EAAE,KAAK;MAChBG,QAAQ,EAAE,CAAC;MACXG,YAAY,EAAE,IAAIgB,IAAI,EAAE;MACxBb,iBAAiB,EAAE,CAAC;MACpBG,kBAAkB,EAAE;KACrB;EAEsE;EAEvEtB,WAAWA,CAAA;IACT,MAAMmC,WAAW,GAAG;MAAEvC,IAAI,EAAE,EAAE;MAAEZ,OAAO,EAAE,EAAE;MAAEP,kBAAkB,EAAE,CAAC;IAAC,CAAE,CAAC,CAAC;IACvE,IAAI,CAAC0B,IAAI,CAACsB,SAAS,CAACW,IAAI,CAACD,WAAW,CAAC;EACvC;EAEAE,QAAQA,CAAA;IACN;IACA,MAAMC,SAAS,GAAG,IAAI,CAACnC,IAAI,CAACoC,EAAE,GAAG,IAAI,CAACX,WAAW,CAACY,UAAU,CAAC,IAAI,CAACrC,IAAI,CAACoC,EAAE,EAAE,IAAI,CAACpC,IAAI,CAAC,GAAG,IAAI,CAACyB,WAAW,CAACa,UAAU,CAAC,IAAI,CAACtC,IAAI,CAAC;IAE9HmC,SAAS,CAACI,SAAS,CAACC,QAAQ,IAAG;MAC7BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;MAChD,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EAAEC,KAAK,IAAG;MACTH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA;qBAjCUtB,mBAAmB,EAAA5D,EAAA,CAAAmF,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAArF,EAAA,CAAAmF,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA;UAAnB5B,mBAAmB;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QDRhC/F,EAAA,CAAAC,cAAA,aAAuC;QAC/BD,EAAA,CAAAa,MAAA,GAAsC;QAAAb,EAAA,CAAAY,YAAA,EAAK;QAC/CZ,EAAA,CAAAC,cAAA,iBAAiD;QAAxBD,EAAA,CAAAE,UAAA,sBAAA+F,sDAAA;UAAA,OAAYD,GAAA,CAAAzB,QAAA,EAAU;QAAA,EAAC;QAG9CvE,EAAA,CAAAC,cAAA,aAAwB;QACHD,EAAA,CAAAa,MAAA,YAAK;QAAAb,EAAA,CAAAY,YAAA,EAAQ;QAChCZ,EAAA,CAAAC,cAAA,eAAkG;QAA/CD,EAAA,CAAAE,UAAA,2BAAAgG,4DAAA9F,MAAA;UAAA,OAAA4F,GAAA,CAAA3D,IAAA,CAAA2B,KAAA,GAAA5D,MAAA;QAAA,EAAwB;QAA3EJ,EAAA,CAAAY,YAAA,EAAkG;QAIpGZ,EAAA,CAAAyB,UAAA,IAAA0E,kCAAA,mBAqEE;QA9EJnG,EAAA,CAAAY,YAAA,EAAiD;;;QAD7CZ,EAAA,CAAAmB,SAAA,GAAsC;QAAtCnB,EAAA,CAAAuB,kBAAA,KAAAyE,GAAA,CAAA3D,IAAA,CAAAoC,EAAA,8BAAsC;QAMazE,EAAA,CAAAmB,SAAA,GAAwB;QAAxBnB,EAAA,CAAAsB,UAAA,YAAA0E,GAAA,CAAA3D,IAAA,CAAA2B,KAAA,CAAwB;QAInDhE,EAAA,CAAAmB,SAAA,GAAmB;QAAnBnB,EAAA,CAAAsB,UAAA,YAAA0E,GAAA,CAAA3D,IAAA,CAAAsB,SAAA,CAAmB","names":["i0","ɵɵelementStart","ɵɵlistener","CreateQuizComponent_div_9_div_5_div_1_Template_input_ngModelChange_2_listener","$event","ɵɵrestoreView","_r12","question_r5","ɵɵnextContext","$implicit","ɵɵresetView","correctAnswerIndex","ɵɵelementEnd","ɵɵtext","CreateQuizComponent_div_9_div_5_div_1_Template_input_ngModelChange_4_listener","restoredCtx","oIndex_r9","index","options","ɵɵadvance","ɵɵpropertyInterpolate1","qIndex_r6","ɵɵproperty","ɵɵtextInterpolate1","ɵɵpropertyInterpolate2","ɵɵtemplate","CreateQuizComponent_div_9_div_5_div_1_Template","CreateQuizComponent_div_9_Template_input_ngModelChange_4_listener","_r17","question_r2","text","CreateQuizComponent_div_9_div_5_Template","CreateQuizComponent_div_9_Template_button_click_6_listener","ctx_r18","addQuestion","CreateQuizComponent_div_9_Template_input_ngModelChange_11_listener","ctx_r19","quiz","maxAttempts","CreateQuizComponent_div_9_Template_input_ngModelChange_15_listener","ctx_r20","showAnswers","CreateQuizComponent_div_9_Template_input_ngModelChange_19_listener","ctx_r21","showScore","CreateQuizComponent_div_9_Template_input_ngModelChange_23_listener","ctx_r22","passMark","CreateQuizComponent_div_9_Template_input_ngModelChange_27_listener","ctx_r23","scheduleDate","CreateQuizComponent_div_9_Template_input_ngModelChange_31_listener","ctx_r24","durationInSeconds","CreateQuizComponent_div_9_Template_input_ngModelChange_35_listener","ctx_r25","randomizeQuestions","qIndex_r3","ctx_r1","questions","CreateQuizComponent","constructor","quizService","router","title","createdDate","Date","creator","status","newQuestion","push","saveQuiz","operation","id","updateQuiz","createQuiz","subscribe","response","console","log","navigate","error","_","ɵɵdirectiveInject","i1","QuizService","i2","Router","_2","selectors","decls","vars","consts","template","CreateQuizComponent_Template","rf","ctx","CreateQuizComponent_Template_form_ngSubmit_3_listener","CreateQuizComponent_Template_input_ngModelChange_8_listener","CreateQuizComponent_div_9_Template"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.ts"],"sourcesContent":["<!-- quiz-management.component.html -->\r\n<div class=\"quiz-management-container\">\r\n    <h1>{{ quiz.id ? 'Edit' : 'Create' }} Quiz</h1>\r\n    <form #quizForm=\"ngForm\" (ngSubmit)=\"saveQuiz()\">\r\n  \r\n      <!-- Quiz Title -->\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" id=\"title\" class=\"form-control\" [(ngModel)]=\"quiz.title\" name=\"title\" required>\r\n      </div>\r\n  \r\n      <!-- Questions -->\r\n      <div *ngFor=\"let question of quiz.questions; let qIndex = index\">\r\n        <!-- Question Text -->\r\n        <div class=\"form-group\">\r\n          <label for=\"question-{{qIndex}}\">Question {{qIndex + 1}}</label>\r\n          <input type=\"text\" id=\"question-{{qIndex}}\" class=\"form-control\" [(ngModel)]=\"question.text\" name=\"question-{{qIndex}}\" required>\r\n        </div>\r\n  \r\n        <!-- Questions List -->\r\n    <div *ngFor=\"let question of quiz.questions; let qIndex = index\">\r\n        <!-- ... question text input ... -->\r\n  \r\n        <!-- Options with Radio Buttons for Correct Answer -->\r\n        <div *ngFor=\"let option of question.options; let oIndex = index\" class=\"form-group\">\r\n          <label>\r\n            <input type=\"radio\" [(ngModel)]=\"question.correctAnswerIndex\" [value]=\"oIndex\" name=\"correctAnswer-{{qIndex}}\">\r\n            Option {{ oIndex + 1 }}:\r\n          </label>\r\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"question.options[oIndex]\" name=\"option-{{qIndex}}-{{oIndex}}\">\r\n        </div>\r\n      </div>\r\n  \r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"addQuestion()\">Add Question</button>\r\n  \r\n      <!-- Max Attempts -->\r\n      <div class=\"form-group\">\r\n        <label for=\"maxAttempts\">Max Attempts:</label>\r\n        <input type=\"number\" id=\"maxAttempts\" class=\"form-control\" [(ngModel)]=\"quiz.maxAttempts\" name=\"maxAttempts\" required>\r\n      </div>\r\n  \r\n      <!-- Show Answers -->\r\n      <div class=\"form-group\">\r\n        <label for=\"showAnswers\">Show Answers:</label>\r\n        <input type=\"checkbox\" id=\"showAnswers\" [(ngModel)]=\"quiz.showAnswers\" name=\"showAnswers\">\r\n      </div>\r\n  \r\n      <!-- Show Score -->\r\n      <div class=\"form-group\">\r\n        <label for=\"showScore\">Show Score:</label>\r\n        <input type=\"checkbox\" id=\"showScore\" [(ngModel)]=\"quiz.showScore\" name=\"showScore\">\r\n      </div>\r\n  \r\n      <!-- Pass Mark -->\r\n      <div class=\"form-group\">\r\n        <label for=\"passMark\">Pass Mark:</label>\r\n        <input type=\"number\" id=\"passMark\" class=\"form-control\" [(ngModel)]=\"quiz.passMark\" name=\"passMark\" required>\r\n      </div>\r\n  \r\n  \r\n      <!-- Schedule Date -->\r\n      <div class=\"form-group\">\r\n        <label for=\"scheduleDate\">Schedule Date</label>\r\n        <input type=\"datetime-local\" id=\"scheduleDate\" class=\"form-control\" [(ngModel)]=\"quiz.scheduleDate\" name=\"scheduleDate\">\r\n      </div>\r\n  \r\n      <!-- Duration in Seconds -->\r\n      <div class=\"form-group\">\r\n        <label for=\"durationInSeconds\">Duration (in seconds)</label>\r\n        <input type=\"number\" id=\"durationInSeconds\" class=\"form-control\" [(ngModel)]=\"quiz.durationInSeconds\" name=\"durationInSeconds\" required>\r\n      </div>\r\n  \r\n      <!-- Randomize Questions -->\r\n      <div class=\"form-group\">\r\n        <label for=\"randomizeQuestions\">Randomize Questions</label>\r\n        <input type=\"checkbox\" id=\"randomizeQuestions\" [(ngModel)]=\"quiz.randomizeQuestions\" name=\"randomizeQuestions\">\r\n      </div>\r\n  \r\n      <!-- Save Quiz Button -->\r\n      <button type=\"submit\" class=\"btn btn-primary\">Save Quiz</button>\r\n \r\n  </div>\r\n  ","import { Component } from '@angular/core';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service'; \r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-quiz',\r\n  templateUrl: './create-quiz.component.html',\r\n  styleUrls: ['./create-quiz.component.css']\r\n})\r\nexport class CreateQuizComponent {\r\n  quiz: any = {\r\n    title: '',\r\n    questions: [],\r\n    createdDate: new Date(), // Assuming handling on the frontend for simplicity\r\n    creator: '', // This should be set based on the logged-in user or similar\r\n    status: 'Draft', // Default status\r\n    maxAttempts: 1,\r\n    showAnswers: false,\r\n    showScore: false,\r\n    passMark: 0,\r\n    scheduleDate: new Date(), // Set a default or use a date picker in the UI\r\n    durationInSeconds: 0,\r\n    randomizeQuestions: false\r\n  };\r\n\r\n  constructor(private quizService: QuizService, private router: Router) {}\r\n\r\n  addQuestion(): void {\r\n    const newQuestion = { text: '', options: [], correctAnswerIndex: -1 }; // Default empty question\r\n    this.quiz.questions.push(newQuestion);\r\n  }\r\n\r\n  saveQuiz(): void {\r\n    // Update or create based on the quiz's presence in the database\r\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\r\n    \r\n    operation.subscribe(response => {\r\n      console.log('Quiz saved successfully', response);\r\n      this.router.navigate(['/quiz-list']);\r\n    }, error => {\r\n      console.error('Error saving quiz', error);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}