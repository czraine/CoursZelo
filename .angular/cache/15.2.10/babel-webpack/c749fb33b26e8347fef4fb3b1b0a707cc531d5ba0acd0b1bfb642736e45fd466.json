{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AttemptComponent_div_0_div_4_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\", 9);\n    i0.ɵɵtext(2, \"option:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function AttemptComponent_div_0_div_4_li_4_Template_input_change_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const oIndex_r6 = restoredCtx.index;\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onAnswer(question_r2.id, oIndex_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    const oIndex_r6 = ctx.index;\n    const qIndex_r3 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", \"option-\" + qIndex_r3 + \"-\" + oIndex_r6)(\"name\", \"question-\" + qIndex_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"option-\" + qIndex_r3 + \"-\" + oIndex_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r5);\n  }\n}\nfunction AttemptComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_li_4_Template, 6, 4, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nfunction AttemptComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AttemptComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.submitAttempt());\n    });\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_Template, 5, 2, \"div\", 2);\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n    i0.ɵɵtext(7, \"Student Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.studentName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n    i0.ɵɵtext(11, \"Feedback:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"textarea\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_textarea_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.feedback = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵtext(14, \"Submit Attempt\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quiz.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.quiz.questions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.studentName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.feedback);\n  }\n}\nexport class AttemptComponent {\n  constructor(quizService, route) {\n    this.quizService = quizService;\n    this.route = route;\n  }\n  ngOnInit() {\n    const quizId = this.route.snapshot.paramMap.get('id');\n    if (quizId) {\n      this.quizService.getQuizById(quizId).subscribe(quiz => {\n        this.quiz = quiz;\n        this.attempt = {\n          quizId: quiz.id,\n          username: '',\n          responses: new Map()\n        };\n      }, error => console.error('Error loading quiz:', error));\n    }\n  }\n  onAnswer(questionId, selectedOption) {\n    if (this.attempt && this.attempt.responses) {\n      this.attempt.responses[questionId] = selectedOption;\n    }\n  }\n  submitAttempt() {\n    if (this.attempt) {\n      this.quizService.submitAttempt(this.attempt).subscribe(result => console.log('Attempt submitted successfully', result), error => console.error('Error submitting attempt', error));\n    }\n  }\n  static #_ = this.ɵfac = function AttemptComponent_Factory(t) {\n    return new (t || AttemptComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttemptComponent,\n    selectors: [[\"app-attempts\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"for\", \"studentName\"], [\"type\", \"text\", \"id\", \"studentName\", \"name\", \"studentName\", \"placeholder\", \"Enter your name\", \"title\", \"Enter your full name here\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"feedback\"], [\"id\", \"feedback\", \"name\", \"feedback\", \"placeholder\", \"Any feedback?\", \"title\", \"Leave your feedback about the quiz here\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"for\", \"option\"], [\"type\", \"radio\", \"id\", \"option\", 3, \"id\", \"name\", \"change\"], [3, \"for\"]],\n    template: function AttemptComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AttemptComponent_div_0_Template, 15, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".quiz-container[_ngcontent-%COMP%] {\\r\\n    max-width: 600px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 8px;\\r\\n    background-color: #f9f9f9;\\r\\n  }\\r\\n  \\r\\n  .question[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .question[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  ul[_ngcontent-%COMP%] {\\r\\n    list-style: none;\\r\\n    padding: 0;\\r\\n  }\\r\\n  \\r\\n  li[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .student-info[_ngcontent-%COMP%], .feedback[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    margin-bottom: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\r\\n    margin-right: 5px;\\r\\n  }\\r\\n  \\r\\n  .submit-button[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    padding: 10px 15px;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  \\r\\n  .submit-button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dGVtcHRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixVQUFVO0VBQ1o7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJmaWxlIjoiYXR0ZW1wdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5xdWl6LWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbiAgfVxyXG4gIFxyXG4gIC5xdWVzdGlvbiB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAucXVlc3Rpb24gcCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIGxpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICB9XHJcbiAgXHJcbiAgLnN0dWRlbnQtaW5mbywgLmZlZWRiYWNrIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSwgdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gIH1cclxuICBcclxuICAuc3VibWl0LWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxuICBcclxuICAuc3VibWl0LWJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICAiXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXR0ZW1wdC9hdHRlbXB0cy9hdHRlbXB0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQix5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsVUFBVTtFQUNaOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsY0FBYztJQUNkLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztBQUVGLG93RUFBb3dFIiwic291cmNlc0NvbnRlbnQiOlsiLnF1aXotY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9uIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5xdWVzdGlvbiBwIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICB1bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbiAgXHJcbiAgbGkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICAuc3R1ZGVudC1pbmZvLCAuZmVlZGJhY2sge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLCB0ZXh0YXJlYSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdWJtaXQtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdWJtaXQtYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AttemptComponent_div_0_div_4_li_4_Template_input_change_3_listener","restoredCtx","ɵɵrestoreView","_r9","oIndex_r6","index","question_r2","ɵɵnextContext","$implicit","ctx_r7","ɵɵresetView","onAnswer","id","ɵɵadvance","ɵɵproperty","qIndex_r3","ɵɵtextInterpolate","option_r5","ɵɵtemplate","AttemptComponent_div_0_div_4_li_4_Template","text","options","AttemptComponent_div_0_Template_form_ngSubmit_3_listener","_r12","ctx_r11","submitAttempt","AttemptComponent_div_0_div_4_Template","AttemptComponent_div_0_Template_input_ngModelChange_8_listener","$event","ctx_r13","studentName","AttemptComponent_div_0_Template_textarea_ngModelChange_12_listener","ctx_r14","feedback","ctx_r0","quiz","title","questions","AttemptComponent","constructor","quizService","route","ngOnInit","quizId","snapshot","paramMap","get","getQuizById","subscribe","attempt","username","responses","Map","error","console","questionId","selectedOption","result","log","_","ɵɵdirectiveInject","i1","QuizService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","AttemptComponent_Template","rf","ctx","AttemptComponent_div_0_Template"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.ts"],"sourcesContent":["<div *ngIf=\"quiz\">\r\n    <h1>{{ quiz.title }}</h1>\r\n    <form (ngSubmit)=\"submitAttempt()\">\r\n      <div *ngFor=\"let question of quiz.questions; index as qIndex\">\r\n        <p>{{ question.text }}</p>\r\n        <ul>\r\n          <li *ngFor=\"let option of question.options; index as oIndex\">\r\n            <label for=\"option\">option:</label>\r\n            <input  type=\"radio\" id=\"option\"\r\n              \r\n              [id]=\"'option-' + qIndex + '-' + oIndex\" \r\n              [name]=\"'question-' + qIndex\" \r\n              (change)=\"onAnswer(question.id, oIndex)\"\r\n            />\r\n            <label [for]=\"'option-' + qIndex + '-' + oIndex\">{{ option }}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"studentName\">Student Name:</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"studentName\" \r\n          [(ngModel)]=\"studentName\" \r\n          name=\"studentName\" \r\n          placeholder=\"Enter your name\" \r\n          title=\"Enter your full name here\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"feedback\">Feedback:</label>\r\n        <textarea \r\n          id=\"feedback\" \r\n          [(ngModel)]=\"feedback\" \r\n          name=\"feedback\" \r\n          placeholder=\"Any feedback?\" \r\n          title=\"Leave your feedback about the quiz here\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Submit Attempt</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service';\r\nimport { Attempt, Quiz } from  'src/app/Models/Module';\r\nimport\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-attempts',\r\n  templateUrl: './attempts.component.html',\r\n  styleUrls: ['./attempts.component.css']\r\n})\r\nexport class AttemptComponent implements OnInit {\r\n  q  quiz: Quiz | undefined;\r\n  attempt: Attempt | undefined;\r\n\r\n  constructor(\r\n    private quizService: QuizService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const quizId = this.route.snapshot.paramMap.get('id');\r\n    if (quizId) {\r\n      this.quizService.getQuizById(quizId).subscribe(\r\n        (quiz: Quiz) => {\r\n          this.quiz = quiz;\r\n          this.attempt = {\r\n            quizId: quiz.id,\r\n            username: '', // Devrait être récupéré de la session utilisateur ou d'un formulaire\r\n            responses: new Map<string, string>()\r\n          };\r\n        },\r\n        (error) => console.error('Error loading quiz:', error)\r\n      );\r\n    }\r\n  }\r\n\r\n  onAnswer(questionId: string, selectedOption: string): void {\r\n    if (this.attempt && this.attempt.responses) {\r\n      this.attempt.responses[questionId] = selectedOption;\r\n    }\r\n  }\r\n\r\n  submitAttempt(): void {\r\n    if (this.attempt) {\r\n      this.quizService.submitAttempt(this.attempt).subscribe(\r\n        (result) => console.log('Attempt submitted successfully', result),\r\n        (error) => console.error('Error submitting attempt', error)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}