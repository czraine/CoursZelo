{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AttemptComponent_div_0_div_4_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 6);\n    i0.ɵɵlistener(\"change\", function AttemptComponent_div_0_div_4_li_4_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const idx_r5 = restoredCtx.index;\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.selectAnswer(question_r2.id, idx_r5));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", question_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction AttemptComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_li_4_Template, 3, 2, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nfunction AttemptComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AttemptComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.submitAttempt());\n    });\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_Template, 5, 2, \"div\", 2);\n    i0.ɵɵelementStart(5, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.studentName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"textarea\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_textarea_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.feedback = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 5);\n    i0.ɵɵtext(8, \"Submit Attempt\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quiz.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.quiz.questions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.studentName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.feedback);\n  }\n}\nexport class AttemptComponent {\n  constructor(quizService, route) {\n    this.quizService = quizService;\n    this.route = route;\n    this.studentResponses = {};\n    this.studentName = '';\n    this.feedback = '';\n  }\n  ngOnInit() {\n    const quizId = this.route.snapshot.paramMap.get('id');\n    if (quizId) {\n      this.quizService.getQuizById(quizId).subscribe(quiz => {\n        this.quiz = quiz;\n      });\n    }\n  }\n  submitAttempt() {\n    const attempt = {\n      quizId: this.quiz.id,\n      username: this.studentName,\n      responses: this.studentResponses,\n      feedback: this.feedback,\n      attemptDate: new Date(),\n      score: 0 // Le score pourrait être calculé côté serveur\n    };\n    this.quizService.submitAttempt(attempt).subscribe(result => console.log('Attempt submitted successfully', result), error => console.error('Error submitting attempt', error));\n  }\n  selectAnswer(questionId, optionIndex) {\n    this.studentResponses[questionId] = optionIndex.toString();\n  }\n  static #_ = this.ɵfac = function AttemptComponent_Factory(t) {\n    return new (t || AttemptComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttemptComponent,\n    selectors: [[\"app-attempts\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Your Name\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Feedback\", \"name\", \"feedback\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"radio\", 3, \"name\", \"change\"]],\n    template: function AttemptComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AttemptComponent_div_0_Template, 9, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdHRlbXB0cy5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXR0ZW1wdC9hdHRlbXB0cy9hdHRlbXB0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvS0FBb0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;IAMUA,EAAA,CAAAC,cAAA,SAA6D;IAClBD,EAAA,CAAAE,UAAA,oBAAAC,mEAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAH,WAAA,CAAAI,KAAA;MAAA,MAAAC,WAAA,GAAAT,EAAA,CAAAU,aAAA,GAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAZ,EAAA,CAAAU,aAAA;MAAA,OAAUV,EAAA,CAAAa,WAAA,CAAAD,MAAA,CAAAE,YAAA,CAAAL,WAAA,CAAAM,EAAA,EAAAR,MAAA,CAA8B;IAAA,EAAC;IAAlFP,EAAA,CAAAgB,YAAA,EAAmF;IACnFhB,EAAA,CAAAiB,MAAA,GACF;IAAAjB,EAAA,CAAAgB,YAAA,EAAK;;;;;IAFiBhB,EAAA,CAAAkB,SAAA,GAAoB;IAApBlB,EAAA,CAAAmB,UAAA,SAAAV,WAAA,CAAAM,EAAA,CAAoB;IACxCf,EAAA,CAAAkB,SAAA,GACF;IADElB,EAAA,CAAAoB,kBAAA,MAAAC,SAAA,MACF;;;;;IANJrB,EAAA,CAAAC,cAAA,UAA6C;IACxCD,EAAA,CAAAiB,MAAA,GAAmB;IAAAjB,EAAA,CAAAgB,YAAA,EAAI;IAC1BhB,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAsB,UAAA,IAAAC,0CAAA,gBAGK;IACPvB,EAAA,CAAAgB,YAAA,EAAK;;;;IANFhB,EAAA,CAAAkB,SAAA,GAAmB;IAAnBlB,EAAA,CAAAwB,iBAAA,CAAAf,WAAA,CAAAgB,IAAA,CAAmB;IAEGzB,EAAA,CAAAkB,SAAA,GAAqB;IAArBlB,EAAA,CAAAmB,UAAA,YAAAV,WAAA,CAAAiB,OAAA,CAAqB;;;;;;IANtD1B,EAAA,CAAAC,cAAA,UAAkB;IACVD,EAAA,CAAAiB,MAAA,GAAgB;IAAAjB,EAAA,CAAAgB,YAAA,EAAK;IACzBhB,EAAA,CAAAC,cAAA,cAAmC;IAA7BD,EAAA,CAAAE,UAAA,sBAAAyB,yDAAA;MAAA3B,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAC,OAAA,GAAA7B,EAAA,CAAAU,aAAA;MAAA,OAAYV,EAAA,CAAAa,WAAA,CAAAgB,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAChC9B,EAAA,CAAAsB,UAAA,IAAAS,qCAAA,iBAQM;IACN/B,EAAA,CAAAC,cAAA,eAAiF;IAA9DD,EAAA,CAAAE,UAAA,2BAAA8B,+DAAAC,MAAA;MAAAjC,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAM,OAAA,GAAAlC,EAAA,CAAAU,aAAA;MAAA,OAAAV,EAAA,CAAAa,WAAA,CAAAqB,OAAA,CAAAC,WAAA,GAAAF,MAAA;IAAA,EAAyB;IAA5CjC,EAAA,CAAAgB,YAAA,EAAiF;IACjFhB,EAAA,CAAAC,cAAA,kBAAwE;IAA9DD,EAAA,CAAAE,UAAA,2BAAAkC,kEAAAH,MAAA;MAAAjC,EAAA,CAAAK,aAAA,CAAAuB,IAAA;MAAA,MAAAS,OAAA,GAAArC,EAAA,CAAAU,aAAA;MAAA,OAAAV,EAAA,CAAAa,WAAA,CAAAwB,OAAA,CAAAC,QAAA,GAAAL,MAAA;IAAA,EAAsB;IAAwCjC,EAAA,CAAAgB,YAAA,EAAW;IACnFhB,EAAA,CAAAC,cAAA,gBAAsB;IAAAD,EAAA,CAAAiB,MAAA,qBAAc;IAAAjB,EAAA,CAAAgB,YAAA,EAAS;;;;IAb3ChB,EAAA,CAAAkB,SAAA,GAAgB;IAAhBlB,EAAA,CAAAwB,iBAAA,CAAAe,MAAA,CAAAC,IAAA,CAAAC,KAAA,CAAgB;IAEQzC,EAAA,CAAAkB,SAAA,GAAiB;IAAjBlB,EAAA,CAAAmB,UAAA,YAAAoB,MAAA,CAAAC,IAAA,CAAAE,SAAA,CAAiB;IASxB1C,EAAA,CAAAkB,SAAA,GAAyB;IAAzBlB,EAAA,CAAAmB,UAAA,YAAAoB,MAAA,CAAAJ,WAAA,CAAyB;IAClCnC,EAAA,CAAAkB,SAAA,GAAsB;IAAtBlB,EAAA,CAAAmB,UAAA,YAAAoB,MAAA,CAAAD,QAAA,CAAsB;;;ACDtC,OAAM,MAAOK,gBAAgB;EAM3BC,YACUC,WAAwB,EACxBC,KAAqB;IADrB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IANf,KAAAC,gBAAgB,GAAqC,EAAE;IACvD,KAAAZ,WAAW,GAAW,EAAE;IACxB,KAAAG,QAAQ,GAAW,EAAE;EAKlB;EAEHU,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,IAAIH,MAAM,EAAE;MACV,IAAI,CAACJ,WAAW,CAACQ,WAAW,CAACJ,MAAM,CAAC,CAACK,SAAS,CAACd,IAAI,IAAG;QACpD,IAAI,CAACA,IAAI,GAAGA,IAAI;MAClB,CAAC,CAAC;;EAEN;EAEAV,aAAaA,CAAA;IACX,MAAMyB,OAAO,GAAG;MACdN,MAAM,EAAE,IAAI,CAACT,IAAI,CAACzB,EAAE;MACpByC,QAAQ,EAAE,IAAI,CAACrB,WAAW;MAC1BsB,SAAS,EAAE,IAAI,CAACV,gBAAgB;MAChCT,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBoB,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,KAAK,EAAE,CAAC,CAAE;KACX;IAED,IAAI,CAACf,WAAW,CAACf,aAAa,CAACyB,OAAO,CAAC,CAACD,SAAS,CAC/CO,MAAM,IAAIC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,MAAM,CAAC,EAC/DG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAC1D;EACH;EAEAlD,YAAYA,CAACmD,UAAkB,EAAEC,WAAmB;IAClD,IAAI,CAACnB,gBAAgB,CAACkB,UAAU,CAAC,GAAGC,WAAW,CAACC,QAAQ,EAAE;EAC5D;EAAC,QAAAC,CAAA;qBAtCUzB,gBAAgB,EAAA3C,EAAA,CAAAqE,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAvE,EAAA,CAAAqE,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA;UAAhB/B,gBAAgB;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QDZ7BjF,EAAA,CAAAsB,UAAA,IAAA6D,+BAAA,iBAgBQ;;;QAhBFnF,EAAA,CAAAmB,UAAA,SAAA+D,GAAA,CAAA1C,IAAA,CAAU","names":["i0","ɵɵelementStart","ɵɵlistener","AttemptComponent_div_0_div_4_li_4_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r8","idx_r5","index","question_r2","ɵɵnextContext","$implicit","ctx_r6","ɵɵresetView","selectAnswer","id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","option_r4","ɵɵtemplate","AttemptComponent_div_0_div_4_li_4_Template","ɵɵtextInterpolate","text","options","AttemptComponent_div_0_Template_form_ngSubmit_3_listener","_r11","ctx_r10","submitAttempt","AttemptComponent_div_0_div_4_Template","AttemptComponent_div_0_Template_input_ngModelChange_5_listener","$event","ctx_r12","studentName","AttemptComponent_div_0_Template_textarea_ngModelChange_6_listener","ctx_r13","feedback","ctx_r0","quiz","title","questions","AttemptComponent","constructor","quizService","route","studentResponses","ngOnInit","quizId","snapshot","paramMap","get","getQuizById","subscribe","attempt","username","responses","attemptDate","Date","score","result","console","log","error","questionId","optionIndex","toString","_","ɵɵdirectiveInject","i1","QuizService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","AttemptComponent_Template","rf","ctx","AttemptComponent_div_0_Template"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.ts"],"sourcesContent":["<div *ngIf=\"quiz\">\r\n    <h2>{{ quiz.title }}</h2>\r\n    <form (ngSubmit)=\"submitAttempt()\">\r\n      <div *ngFor=\"let question of quiz.questions\">\r\n        <p>{{ question.text }}</p>\r\n        <ul>\r\n          <li *ngFor=\"let option of question.options; let idx = index\">\r\n            <input type=\"radio\" [name]=\"question.id\" (change)=\"selectAnswer(question.id, idx)\">\r\n            {{ option }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <input type=\"text\" [(ngModel)]=\"studentName\" placeholder=\"Your Name\" name=\"name\">\r\n      <textarea [(ngModel)]=\"feedback\" placeholder=\"Feedback\" name=\"feedback\"></textarea>\r\n      <button type=\"submit\">Submit Attempt</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-attempts',\r\n  templateUrl: './attempts.component.html',\r\n  styleUrls: ['./attempts.component.css']\r\n})\r\n\r\n\r\nexport class AttemptComponent implements OnInit {\r\n  quiz: any;  // Utiliser une interface appropriée\r\n  studentResponses: { [questionId: string]: string } = {};\r\n  studentName: string = '';\r\n  feedback: string = '';\r\n\r\n  constructor(\r\n    private quizService: QuizService, \r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const quizId = this.route.snapshot.paramMap.get('id');\r\n    if (quizId) {\r\n      this.quizService.getQuizById(quizId).subscribe(quiz => {\r\n        this.quiz = quiz;\r\n      });\r\n    }\r\n  }\r\n\r\n  submitAttempt(): void {\r\n    const attempt = {\r\n      quizId: this.quiz.id,\r\n      username: this.studentName,\r\n      responses: this.studentResponses,\r\n      feedback: this.feedback,\r\n      attemptDate: new Date(),  // La date pourrait être définie côté serveur\r\n      score: 0  // Le score pourrait être calculé côté serveur\r\n    };\r\n\r\n    this.quizService.submitAttempt(attempt).subscribe(\r\n      result => console.log('Attempt submitted successfully', result),\r\n      error => console.error('Error submitting attempt', error)\r\n    );\r\n  }\r\n\r\n  selectAnswer(questionId: string, optionIndex: number): void {\r\n    this.studentResponses[questionId] = optionIndex.toString();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}