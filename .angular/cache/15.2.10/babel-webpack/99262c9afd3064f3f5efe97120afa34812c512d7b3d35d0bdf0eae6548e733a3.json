{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8099/api/Quiz';\n  }\n  createQuiz(quizData) {\n    return this.http.post(`${this.baseUrl}/addQuiz`, quizData);\n  }\n  updateQuiz(quizData) {\n    return this.http.put(`${this.baseUrl}/UpdateQuiz`, quizData);\n  }\n  deleteQuiz(quizId) {\n    return this.http.delete(`${this.baseUrl}/Delete/${quizId}`);\n  }\n  getQuiz(quizId) {\n    return this.http.get(`${this.baseUrl}/retrieve-all/${quizId}`);\n  }\n  getQuizzes() {\n    return this.http.get(`${this.baseUrl}/retrieve-all`);\n  }\n  addQuestionToQuiz(quizId, questionData) {\n    return this.http.post(`${this.baseUrl}/addQuestion/${quizId}`, questionData);\n  }\n  getQuizById(quizId) {\n    return this.http.get(`${this.baseUrl}/retrieve/${quizId}`); // Corrected URL path\n  }\n  submitAttempt(attempt) {\n    return this.http.post(`${this.baseUrl}/submitAttempt`, attempt);\n  }\n  static #_ = this.ɵfac = function QuizService_Factory(t) {\n    return new (t || QuizService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuizService,\n    factory: QuizService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAG,gCAAgC;EAIX;EAEvCC,UAAUA,CAACC,QAAa;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,UAAU,EAAEE,QAAQ,CAAC;EAC5D;EAEAE,UAAUA,CAACF,QAAa;IACtB,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,aAAa,EAAEE,QAAQ,CAAC;EAC9D;EAEAI,UAAUA,CAACC,MAAc;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,WAAWO,MAAM,EAAE,CAAC;EAC7D;EAEAE,OAAOA,CAACF,MAAc;IACpB,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,iBAAiBO,MAAM,EAAE,CAAC;EAChE;EAEAI,UAAUA,CAAA;IACR,OAAO,IAAI,CAACZ,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACV,OAAO,eAAe,CAAC;EAC7D;EAEAY,iBAAiBA,CAACL,MAAc,EAAEM,YAAiB;IACjD,OAAO,IAAI,CAACd,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,gBAAgBO,MAAM,EAAE,EAAEM,YAAY,CAAC;EAC9E;EACAC,WAAWA,CAACP,MAAc;IACxB,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,aAAaO,MAAM,EAAE,CAAC,CAAC,CAAC;EAC9D;EAGAQ,aAAaA,CAACC,OAAY;IACxB,OAAO,IAAI,CAACjB,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,gBAAgB,EAAEgB,OAAO,CAAC;EACjE;EAAC,QAAAC,CAAA;qBArCUpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM","names":["QuizService","constructor","http","baseUrl","createQuiz","quizData","post","updateQuiz","put","deleteQuiz","quizId","delete","getQuiz","get","getQuizzes","addQuestionToQuiz","questionData","getQuizById","submitAttempt","attempt","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\QuizService\\quiz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuizService {\r\n  private baseUrl = 'http://localhost:8099/api/Quiz'; \r\n\r\n  \r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createQuiz(quizData: any): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/addQuiz`, quizData);\r\n  }\r\n\r\n  updateQuiz(quizData: any): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/UpdateQuiz`, quizData);\r\n  }\r\n\r\n  deleteQuiz(quizId: string): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/Delete/${quizId}`);\r\n  }\r\n\r\n  getQuiz(quizId: string): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/retrieve-all/${quizId}`);\r\n  }\r\n\r\n  getQuizzes(): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.baseUrl}/retrieve-all`);\r\n  }\r\n\r\n  addQuestionToQuiz(quizId: string, questionData: any): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/addQuestion/${quizId}`, questionData);\r\n  }\r\n  getQuizById(quizId: string): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/retrieve/${quizId}`); // Corrected URL path\r\n  }\r\n\r\n\r\n  submitAttempt(attempt: any): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/submitAttempt`, attempt);\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}