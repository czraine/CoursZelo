{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction QuestionComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\")(2, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionComponent_li_4_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.question.correctAnswerIndex = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const idx_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", idx_r2)(\"ngModel\", ctx_r0.question.correctAnswerIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1, \" \");\n  }\n}\nexport class QuestionComponent {\n  constructor() {\n    this.answerSelected = new EventEmitter(); // Émetteur d'événement pour la réponse sélectionnée\n  }\n  onAnswerSelected(optionIndex) {\n    this.answerSelected.emit(optionIndex);\n  }\n  static #_ = this.ɵfac = function QuestionComponent_Factory(t) {\n    return new (t || QuestionComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionComponent,\n    selectors: [[\"app-question\"]],\n    inputs: {\n      question: \"question\"\n    },\n    outputs: {\n      answerSelected: \"answerSelected\"\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"question-block\"], [1, \"options-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"feedback-block\"], [3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"options\", 3, \"value\", \"ngModel\", \"ngModelChange\"]],\n    template: function QuestionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\", 1);\n        i0.ɵɵtemplate(4, QuestionComponent_li_4_Template, 4, 3, \"li\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \" Feedback: \");\n        i0.ɵɵelementStart(8, \"textarea\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function QuestionComponent_Template_textarea_ngModelChange_8_listener($event) {\n          return ctx.question.feedback = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.question.text);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.question.options);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.question.feedback);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJxdWVzdGlvbi5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVlc3Rpb25zL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9LQUFvSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;;ICGhEC,EAAA,CAAAC,cAAA,SAA6D;IAEvBD,EAAA,CAAAE,UAAA,2BAAAC,+DAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAAaR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,QAAA,CAAAC,kBAAA,GAAAP,MAAA,CAAmC;IAAA,EAAP;IAA3EJ,EAAA,CAAAY,YAAA,EAA2F;IAC3FZ,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAY,YAAA,EAAQ;;;;;;IAFcZ,EAAA,CAAAc,SAAA,GAAa;IAAbd,EAAA,CAAAe,UAAA,UAAAC,MAAA,CAAa,YAAAC,MAAA,CAAAP,QAAA,CAAAC,kBAAA;IACjCX,EAAA,CAAAc,SAAA,GACF;IADEd,EAAA,CAAAkB,kBAAA,MAAAC,SAAA,MACF;;;ADAR,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAOY,KAAAC,cAAc,GAAG,IAAIvB,YAAY,EAAU,CAAC,CAAE;;EAExDwB,gBAAgBA,CAACC,WAAmB;IAClC,IAAI,CAACF,cAAc,CAACG,IAAI,CAACD,WAAW,CAAC;EACvC;EAAC,QAAAE,CAAA;qBANUN,iBAAiB;EAAA;EAAA,QAAAO,EAAA;UAAjBP,iBAAiB;IAAAQ,SAAA;IAAAC,MAAA;MAAAnB,QAAA;IAAA;IAAAoB,OAAA;MAAAR,cAAA;IAAA;IAAAS,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BpC,EAAA,CAAAC,cAAA,aAA4B;QACpBD,EAAA,CAAAa,MAAA,GAAmB;QAAAb,EAAA,CAAAY,YAAA,EAAK;QAC5BZ,EAAA,CAAAC,cAAA,YAAyB;QACvBD,EAAA,CAAAsC,UAAA,IAAAC,+BAAA,gBAKK;QACPvC,EAAA,CAAAY,YAAA,EAAK;QACLZ,EAAA,CAAAC,cAAA,aAA4B;QAExBD,EAAA,CAAAa,MAAA,kBACA;QAAAb,EAAA,CAAAC,cAAA,kBAA0C;QAAhCD,EAAA,CAAAE,UAAA,2BAAAsC,6DAAApC,MAAA;UAAA,OAAAiC,GAAA,CAAA3B,QAAA,CAAA+B,QAAA,GAAArC,MAAA;QAAA,EAA+B;QAACJ,EAAA,CAAAY,YAAA,EAAW;;;QAZrDZ,EAAA,CAAAc,SAAA,GAAmB;QAAnBd,EAAA,CAAA0C,iBAAA,CAAAL,GAAA,CAAA3B,QAAA,CAAAiC,IAAA,CAAmB;QAEE3C,EAAA,CAAAc,SAAA,GAAqB;QAArBd,EAAA,CAAAe,UAAA,YAAAsB,GAAA,CAAA3B,QAAA,CAAAkC,OAAA,CAAqB;QAUhC5C,EAAA,CAAAc,SAAA,GAA+B;QAA/Bd,EAAA,CAAAe,UAAA,YAAAsB,GAAA,CAAA3B,QAAA,CAAA+B,QAAA,CAA+B","names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","QuestionComponent_li_4_Template_input_ngModelChange_2_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","question","correctAnswerIndex","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","idx_r2","ctx_r0","ɵɵtextInterpolate1","option_r1","QuestionComponent","constructor","answerSelected","onAnswerSelected","optionIndex","emit","_","_2","selectors","inputs","outputs","decls","vars","consts","template","QuestionComponent_Template","rf","ctx","ɵɵtemplate","QuestionComponent_li_4_Template","QuestionComponent_Template_textarea_ngModelChange_8_listener","feedback","ɵɵtextInterpolate","text","options"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Questions\\question\\question.component.ts","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Questions\\question\\question.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent {\r\n  @Input() question: any;  // Remplacer 'any' par le type correct de votre question\r\n  @Output() answerSelected = new EventEmitter<number>();  // Émetteur d'événement pour la réponse sélectionnée\r\n\r\n  onAnswerSelected(optionIndex: number): void {\r\n    this.answerSelected.emit(optionIndex);\r\n  }\r\n}\r\n","<div class=\"question-block\">\r\n    <h4>{{ question.text }}</h4>\r\n    <ul class=\"options-list\">\r\n      <li *ngFor=\"let option of question.options; let idx = index\">\r\n        <label>\r\n          <input type=\"radio\" [value]=\"idx\" [(ngModel)]=\"question.correctAnswerIndex\" name=\"options\">\r\n          {{ option }}\r\n        </label>\r\n      </li>\r\n    </ul>\r\n    <div class=\"feedback-block\">\r\n      <label>\r\n        Feedback:\r\n        <textarea [(ngModel)]=\"question.feedback\"></textarea>\r\n      </label>\r\n    </div>\r\n  </div>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}