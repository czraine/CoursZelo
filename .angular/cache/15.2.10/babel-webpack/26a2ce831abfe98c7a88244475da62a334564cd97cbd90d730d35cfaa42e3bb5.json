{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OptionServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8099/api/Option';\n    this.apiAddOption = 'http://localhost:8099/api/Option/addOption';\n    this.apiDeleteOption = 'http://localhost:8099/api/Option/Delete';\n    this.apiUpdateOption = 'http://localhost:8099/api/Option/UpdateOption';\n    this.apiGetOptions = 'http://localhost:8099/api/Option/retrieve-all';\n    this.apiGetOptionById = 'http://localhost:8099/api/Option/retrieve-all/{{Option-Id}}';\n  }\n  createOption(Option) {\n    return this.http.post(this.apiAddOption, Option);\n  }\n  deleteOption(OptionId) {\n    return this.http.delete(`${this.baseUrl}/Delete/${OptionId}`, {\n      responseType: 'text'\n    });\n  }\n  updateOption(OptionId, OptionData) {\n    return this.http.put(this.apiUpdateOption, OptionData);\n  }\n  getOptions() {\n    return this.http.get(this.apiGetOptions);\n  }\n  getOptionById(OptionId) {\n    const url = `${this.apiGetOptionById}/${OptionId}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function OptionServiceService_Factory(t) {\n    return new (t || OptionServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OptionServiceService,\n    factory: OptionServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,oBAAoB;EAE/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,OAAO,GAAG,kCAAkC;IAC5C,KAAAC,YAAY,GAAG,4CAA4C;IAC3D,KAAAC,eAAe,GAAG,yCAAyC;IAC3D,KAAAC,eAAe,GAAG,+CAA+C;IACjE,KAAAC,aAAa,GAAG,+CAA+C;IAC/D,KAAAC,gBAAgB,GAAG,6DAA6D;EAPhD;EASxCC,YAAYA,CAACC,MAAW;IACtB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACP,YAAY,EAAEM,MAAM,CAAC;EAClD;EAEAE,YAAYA,CAACC,QAAgB;IAC3B,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,WAAWU,QAAQ,EAAE,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACzF;EAEAC,YAAYA,CAACH,QAAgB,EAAEI,UAAe;IAC5C,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACZ,eAAe,EAAEW,UAAU,CAAC;EAC1D;EAGEE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAC,IAAI,CAACb,aAAa,CAAC;EAC1C;EAEAc,aAAaA,CAACR,QAAgB;IAC5B,MAAMS,GAAG,GAAG,GAAG,IAAI,CAACd,gBAAgB,IAAIK,QAAQ,EAAE;IAClD,OAAO,IAAI,CAACX,IAAI,CAACkB,GAAG,CAACE,GAAG,CAAC;EAC3B;EAAC,QAAAC,CAAA;qBA/BUvB,oBAAoB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA;WAApB5B,oBAAoB;IAAA6B,OAAA,EAApB7B,oBAAoB,CAAA8B,IAAA;IAAAC,UAAA,EAFnB;EAAM","names":["OptionServiceService","constructor","http","baseUrl","apiAddOption","apiDeleteOption","apiUpdateOption","apiGetOptions","apiGetOptionById","createOption","Option","post","deleteOption","OptionId","delete","responseType","updateOption","OptionData","put","getOptions","get","getOptionById","url","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\servicesOption\\option-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OptionServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private baseUrl = 'http://localhost:8099/api/Option';\r\n  private apiAddOption = 'http://localhost:8099/api/Option/addOption';\r\n  private apiDeleteOption = 'http://localhost:8099/api/Option/Delete';\r\n  private apiUpdateOption = 'http://localhost:8099/api/Option/UpdateOption';\r\n  private apiGetOptions = 'http://localhost:8099/api/Option/retrieve-all';\r\n  private apiGetOptionById = 'http://localhost:8099/api/Option/retrieve-all/{{Option-Id}}';\r\n\r\n  createOption(Option: any): Observable<any> { \r\n    return this.http.post(this.apiAddOption, Option);\r\n  }\r\n\r\n  deleteOption(OptionId: string): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/Delete/${OptionId}`, { responseType: 'text' });\r\n  }\r\n\r\n  updateOption(OptionId: string, OptionData: any): Observable<any> {\r\n    return this.http.put(this.apiUpdateOption, OptionData); \r\n}\r\n\r\n\r\n  getOptions(): Observable<any> {\r\n    return this.http.get(this.apiGetOptions);\r\n  }\r\n\r\n  getOptionById(OptionId: string): Observable<any> {\r\n    const url = `${this.apiGetOptionById}/${OptionId}`; \r\n    return this.http.get(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}