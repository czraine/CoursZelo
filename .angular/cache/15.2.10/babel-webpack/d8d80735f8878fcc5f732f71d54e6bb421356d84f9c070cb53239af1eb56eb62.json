{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AttemptComponent_div_0_div_4_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function AttemptComponent_div_0_div_4_li_4_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const idx_r6 = restoredCtx.index;\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.selectAnswer(question_r2.id, idx_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    const idx_r6 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext();\n    const qIndex_r3 = ctx_r10.index;\n    const question_r2 = ctx_r10.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"id\", \"option-\", qIndex_r3, \"-\", idx_r6, \"\");\n    i0.ɵɵproperty(\"name\", question_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"for\", \"option-\", qIndex_r3, \"-\", idx_r6, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r5);\n  }\n}\nfunction AttemptComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_li_4_Template, 4, 6, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nfunction AttemptComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AttemptComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.submitAttempt());\n    });\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_Template, 5, 2, \"div\", 2);\n    i0.ɵɵelementStart(5, \"label\", 3);\n    i0.ɵɵtext(6, \"Your Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.studentName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 5);\n    i0.ɵɵtext(9, \"Feedback:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"textarea\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_textarea_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.feedback = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 7);\n    i0.ɵɵtext(12, \"Submit Attempt\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quiz.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.quiz.questions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.studentName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.feedback);\n  }\n}\nexport class AttemptComponent {\n  constructor(quizService, route) {\n    this.quizService = quizService;\n    this.route = route;\n    this.studentResponses = {}; // Réponses de l'étudiant\n  }\n  ngOnInit() {\n    const quizId = this.route.snapshot.paramMap.get('id');\n    if (quizId) {\n      this.quizService.getQuizById(quizId).subscribe(quiz => {\n        this.quiz = quiz;\n      });\n    }\n  }\n  onAnswer(questionId, option) {\n    this.studentResponses[questionId] = option;\n  }\n  submitAttempt() {\n    const attempt = {\n      quizId: this.quiz?.id,\n      responses: this.studentResponses,\n      username: this.studentName,\n      feedback: this.feedback,\n      attemptDate: new Date(),\n      score: 0 // Le score pourrait être calculé côté serveur\n    };\n    this.quizService.submitAttempt(attempt).subscribe(result => console.log('Attempt submitted successfully', result), error => console.error('Error submitting attempt', error));\n  }\n  selectAnswer(questionId, optionIndex) {\n    this.studentResponses[questionId] = optionIndex.toString();\n  }\n  static #_ = this.ɵfac = function AttemptComponent_Factory(t) {\n    return new (t || AttemptComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttemptComponent,\n    selectors: [[\"app-attempts\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"studentName\"], [\"type\", \"text\", \"id\", \"studentName\", \"placeholder\", \"Enter your name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"feedback\"], [\"id\", \"feedback\", \"placeholder\", \"Leave your feedback\", \"name\", \"feedback\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"radio\", 3, \"id\", \"name\", \"change\"], [3, \"for\"]],\n    template: function AttemptComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AttemptComponent_div_0_Template, 13, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdHRlbXB0cy5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXR0ZW1wdC9hdHRlbXB0cy9hdHRlbXB0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvS0FBb0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵlistener","AttemptComponent_div_0_div_4_li_4_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r9","idx_r6","index","question_r2","ɵɵnextContext","$implicit","ctx_r7","ɵɵresetView","selectAnswer","id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵpropertyInterpolate2","qIndex_r3","ɵɵproperty","ɵɵtextInterpolate","option_r5","ɵɵtemplate","AttemptComponent_div_0_div_4_li_4_Template","text","options","AttemptComponent_div_0_Template_form_ngSubmit_3_listener","_r12","ctx_r11","submitAttempt","AttemptComponent_div_0_div_4_Template","AttemptComponent_div_0_Template_input_ngModelChange_7_listener","$event","ctx_r13","studentName","AttemptComponent_div_0_Template_textarea_ngModelChange_10_listener","ctx_r14","feedback","ctx_r0","quiz","title","questions","AttemptComponent","constructor","quizService","route","studentResponses","ngOnInit","quizId","snapshot","paramMap","get","getQuizById","subscribe","onAnswer","questionId","option","attempt","responses","username","attemptDate","Date","score","result","console","log","error","optionIndex","toString","_","ɵɵdirectiveInject","i1","QuizService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","AttemptComponent_Template","rf","ctx","AttemptComponent_div_0_Template"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.ts"],"sourcesContent":["<div *ngIf=\"quiz\">\r\n    <h2>{{ quiz.title }}</h2>\r\n    <form (ngSubmit)=\"submitAttempt()\">\r\n      <div *ngFor=\"let question of quiz.questions; index as qIndex\">\r\n        <p>{{ question.text }}</p>\r\n        <ul>\r\n          <li *ngFor=\"let option of question.options; index as idx\">\r\n            <!-- Utilisez l'attribut 'id' pour associer le label à l'input -->\r\n            <input type=\"radio\" id=\"option-{{qIndex}}-{{idx}}\" [name]=\"question.id\" (change)=\"selectAnswer(question.id, idx)\">\r\n            <label for=\"option-{{qIndex}}-{{idx}}\">{{ option }}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- Ajoutez des labels et des placeholders pour le nom et le feedback -->\r\n      <label for=\"studentName\">Your Name:</label>\r\n      <input type=\"text\" id=\"studentName\" [(ngModel)]=\"studentName\" placeholder=\"Enter your name\" name=\"name\" required>\r\n      \r\n      <label for=\"feedback\">Feedback:</label>\r\n      <textarea id=\"feedback\" [(ngModel)]=\"feedback\" placeholder=\"Leave your feedback\" name=\"feedback\"></textarea>\r\n      \r\n      <button type=\"submit\">Submit Attempt</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service';\r\ninterface Question {\r\n  id: string;\r\n  text: string;\r\n  options: string[];\r\n  // Pas besoin de correctAnswerIndex ni feedback ici car cela concerne le professeur\r\n}\r\n\r\ninterface Quiz {\r\n  id: string;\r\n  title: string;\r\n  questions: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-attempts',\r\n  templateUrl: './attempts.component.html',\r\n  styleUrls: ['./attempts.component.css']\r\n})\r\n\r\n\r\nexport class AttemptComponent implements OnInit {\r\n  quiz?: Quiz;\r\n  studentResponses: {[questionId: string]: string} = {};  // Réponses de l'étudiant\r\n\r\n  constructor(private quizService: QuizService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    const quizId = this.route.snapshot.paramMap.get('id');\r\n    if (quizId) {\r\n      this.quizService.getQuizById(quizId).subscribe(quiz => {\r\n        this.quiz = quiz;\r\n      });\r\n    }\r\n  }\r\n\r\n  onAnswer(questionId: string, option: string): void {\r\n    this.studentResponses[questionId] = option;\r\n  }\r\n\r\n  submitAttempt(): void {\r\n    const attempt = {\r\n      quizId: this.quiz?.id,\r\n      responses: this.studentResponses,\r\n      username: this.studentName,\r\n      feedback: this.feedback,\r\n      attemptDate: new Date(),  // La date pourrait être définie côté serveur\r\n      score: 0  // Le score pourrait être calculé côté serveur\r\n    };\r\n\r\n    this.quizService.submitAttempt(attempt).subscribe(\r\n      result => console.log('Attempt submitted successfully', result),\r\n      error => console.error('Error submitting attempt', error)\r\n    );\r\n  }\r\n\r\n  selectAnswer(questionId: string, optionIndex: number): void {\r\n    this.studentResponses[questionId] = optionIndex.toString();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}