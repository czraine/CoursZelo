{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CreateQuizComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_16_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const question_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(question_r2.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"questionText-\", i_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Question \", i_r3 + 1, \" Text:\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"questionText-\", i_r3, \"\")(\"name\", \"questionText-\", i_r3, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r2.text);\n  }\n}\nexport class CreateQuizComponent {\n  constructor(quizService, router) {\n    this.quizService = quizService;\n    this.router = router;\n    this.quiz = {\n      title: '',\n      questions: [],\n      createdDate: new Date(),\n      creator: '',\n      status: 'Draft',\n      maxAttempts: 1,\n      showAnswers: false,\n      showScore: false,\n      passMark: 0,\n      scheduleDate: new Date(),\n      durationInSeconds: 0,\n      randomizeQuestions: false\n    };\n  }\n  addQuestion() {\n    const newQuestion = {\n      text: '',\n      options: [],\n      correctAnswerIndex: -1\n    }; // Default empty question\n    this.quiz.questions.push(newQuestion);\n  }\n  saveQuiz() {\n    // Update or create based on the quiz's presence in the database\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\n    operation.subscribe(response => {\n      console.log('Quiz saved successfully', response);\n      this.router.navigate(['/quiz-list']);\n    }, error => {\n      console.error('Error saving quiz', error);\n    });\n  }\n  static #_ = this.ɵfac = function CreateQuizComponent_Factory(t) {\n    return new (t || CreateQuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateQuizComponent,\n    selectors: [[\"app-create-quiz\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"quizForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"quizTitle\"], [\"type\", \"text\", \"id\", \"quizTitle\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"quizStatus\"], [\"type\", \"text\", \"id\", \"quizStatus\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"questions-section\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"for\"], [\"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"]],\n    template: function CreateQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Create or Edit Quiz\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateQuizComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.saveQuiz();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Quiz Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.quiz.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.quiz.status = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"h2\");\n        i0.ɵɵtext(15, \"Questions:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, CreateQuizComponent_div_16_Template, 4, 5, \"div\", 9);\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function CreateQuizComponent_Template_button_click_17_listener() {\n          return ctx.addQuestion();\n        });\n        i0.ɵɵtext(18, \"Add Question\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵtext(20, \"Save Quiz\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.status);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quiz.questions);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".quiz-management-container[_ngcontent-%COMP%] {\\r\\n    max-width: 600px;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%] {\\r\\n    padding: 10px 15px;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .btn-primary[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .btn-primary[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS1xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGFBQWE7RUFDZjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsImZpbGUiOiJjcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnF1aXotbWFuYWdlbWVudC1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1jb250cm9sIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB9XHJcbiAgXHJcbiAgLmJ0biB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tcHJpbWFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuYnRuLXByaW1hcnk6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVpei9jcmVhdGUtcXVpei9jcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0FBRUYsdzlDQUF3OUMiLCJzb3VyY2VzQ29udGVudCI6WyIucXVpei1tYW5hZ2VtZW50LWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIH1cclxuICBcclxuICAuYnRuIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmJ0bi1wcmltYXJ5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tcHJpbWFyeTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateQuizComponent_div_16_Template_input_ngModelChange_3_listener","$event","restoredCtx","ɵɵrestoreView","_r5","question_r2","$implicit","ɵɵresetView","text","ɵɵadvance","ɵɵpropertyInterpolate1","i_r3","ɵɵtextInterpolate1","ɵɵproperty","CreateQuizComponent","constructor","quizService","router","quiz","title","questions","createdDate","Date","creator","status","maxAttempts","showAnswers","showScore","passMark","scheduleDate","durationInSeconds","randomizeQuestions","addQuestion","newQuestion","options","correctAnswerIndex","push","saveQuiz","operation","id","updateQuiz","createQuiz","subscribe","response","console","log","navigate","error","_","ɵɵdirectiveInject","i1","QuizService","i2","Router","_2","selectors","decls","vars","consts","template","CreateQuizComponent_Template","rf","ctx","CreateQuizComponent_Template_form_ngSubmit_3_listener","CreateQuizComponent_Template_input_ngModelChange_8_listener","CreateQuizComponent_Template_input_ngModelChange_12_listener","ɵɵtemplate","CreateQuizComponent_div_16_Template","CreateQuizComponent_Template_button_click_17_listener"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.ts"],"sourcesContent":["<!-- quiz-management.component.html -->\r\n<div class=\"container\">\r\n    <h1>Create or Edit Quiz</h1>\r\n    <form #quizForm=\"ngForm\" (ngSubmit)=\"saveQuiz()\">\r\n  \r\n      <!-- Quiz Title -->\r\n      <div class=\"form-group\">\r\n        <label for=\"quizTitle\">Quiz Title:</label>\r\n        <input type=\"text\" id=\"quizTitle\" class=\"form-control\" [(ngModel)]=\"quiz.title\" name=\"title\" required>\r\n      </div>\r\n  \r\n      <!-- Quiz Status -->\r\n      <div class=\"form-group\">\r\n        <label for=\"quizStatus\">Status:</label>\r\n        <input type=\"text\" id=\"quizStatus\" class=\"form-control\" [(ngModel)]=\"quiz.status\" name=\"status\" required>\r\n      </div>\r\n  \r\n      <!-- Other Quiz Properties... -->\r\n      \r\n      <!-- Questions List -->\r\n      <div class=\"questions-section\">\r\n        <h2>Questions:</h2>\r\n        <div *ngFor=\"let question of quiz.questions; let i = index\" class=\"form-group\">\r\n          <label for=\"questionText-{{i}}\">Question {{i + 1}} Text:</label>\r\n          <input type=\"text\" id=\"questionText-{{i}}\" class=\"form-control\" [(ngModel)]=\"question.text\" name=\"questionText-{{i}}\" required>\r\n          \r\n          <!-- Additional question fields like options and correctAnswerIndex here -->\r\n        </div>\r\n  \r\n        <button type=\"button\" (click)=\"addQuestion()\">Add Question</button>\r\n      </div>\r\n  \r\n      <!-- Submit Button -->\r\n      <button type=\"submit\" class=\"btn btn-primary\">Save Quiz</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component } from '@angular/core';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service'; \r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-quiz',\r\n  templateUrl: './create-quiz.component.html',\r\n  styleUrls: ['./create-quiz.component.css']\r\n})\r\nexport class CreateQuizComponent {\r\n  quiz: any = {\r\n    title: '',\r\n    questions: [],\r\n    createdDate: new Date(), // Assuming handling on the frontend for simplicity\r\n    creator: '', // This should be set based on the logged-in user or similar\r\n    status: 'Draft', // Default status\r\n    maxAttempts: 1,\r\n    showAnswers: false,\r\n    showScore: false,\r\n    passMark: 0,\r\n    scheduleDate: new Date(), // Set a default or use a date picker in the UI\r\n    durationInSeconds: 0,\r\n    randomizeQuestions: false\r\n  };\r\n\r\n  constructor(private quizService: QuizService, private router: Router) {}\r\n\r\n  addQuestion(): void {\r\n    const newQuestion = { text: '', options: [], correctAnswerIndex: -1 }; // Default empty question\r\n    this.quiz.questions.push(newQuestion);\r\n  }\r\n\r\n  saveQuiz(): void {\r\n    // Update or create based on the quiz's presence in the database\r\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\r\n    \r\n    operation.subscribe(response => {\r\n      console.log('Quiz saved successfully', response);\r\n      this.router.navigate(['/quiz-list']);\r\n    }, error => {\r\n      console.error('Error saving quiz', error);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}