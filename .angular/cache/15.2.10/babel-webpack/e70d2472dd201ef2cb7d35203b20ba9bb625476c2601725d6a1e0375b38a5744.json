{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class QuestionComponent {\n  constructor() {\n    this.optionSelected = new EventEmitter();\n  }\n  onOptionSelected(optionIndex) {\n    this.optionSelected.emit({\n      questionId: this.question.id,\n      selectedOptionIndex: optionIndex\n    });\n  }\n  static #_ = this.ɵfac = function QuestionComponent_Factory(t) {\n    return new (t || QuestionComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionComponent,\n    selectors: [[\"app-question\"]],\n    inputs: {\n      question: \"question\"\n    },\n    outputs: {\n      optionSelected: \"optionSelected\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function QuestionComponent_Template(rf, ctx) {},\n    styles: [\".question-container[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n    border-bottom: 1px solid #eee;\\r\\n    padding-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  .question-container[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\r\\n    margin-top: 0;\\r\\n  }\\r\\n  \\r\\n  .question-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    margin-left: 5px;\\r\\n  }\\r\\n  \\r\\n  .question-container[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\r\\n    margin-top: -2px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsNkJBQTZCO0lBQzdCLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJxdWVzdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uLWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9uLWNvbnRhaW5lciBoNCB7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gIH1cclxuICBcclxuICAucXVlc3Rpb24tY29udGFpbmVyIGxhYmVsIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5xdWVzdGlvbi1jb250YWluZXIgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcclxuICAgIG1hcmdpbi10b3A6IC0ycHg7XHJcbiAgfVxyXG4gICJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVlc3Rpb25zL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsNkJBQTZCO0lBQzdCLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7QUFFRixvMUJBQW8xQiIsInNvdXJjZXNDb250ZW50IjpbIi5xdWVzdGlvbi1jb250YWluZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5xdWVzdGlvbi1jb250YWluZXIgaDQge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9uLWNvbnRhaW5lciBsYWJlbCB7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gIH1cclxuICBcclxuICAucXVlc3Rpb24tY29udGFpbmVyIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgICBtYXJnaW4tdG9wOiAtMnB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;AActE,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAOY,KAAAC,cAAc,GAAG,IAAIH,YAAY,EAAqD;;EAEhGI,gBAAgBA,CAACC,WAAmB;IAClC,IAAI,CAACF,cAAc,CAACG,IAAI,CAAC;MAACC,UAAU,EAAE,IAAI,CAACC,QAAQ,CAACC,EAAE;MAAEC,mBAAmB,EAAEL;IAAW,CAAC,CAAC;EAC5F;EAAC,QAAAM,CAAA;qBANUV,iBAAiB;EAAA;EAAA,QAAAW,EAAA;UAAjBX,iBAAiB;IAAAY,SAAA;IAAAC,MAAA;MAAAN,QAAA;IAAA;IAAAO,OAAA;MAAAZ,cAAA;IAAA;IAAAa,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAAC,MAAA;EAAA","names":["EventEmitter","QuestionComponent","constructor","optionSelected","onOptionSelected","optionIndex","emit","questionId","question","id","selectedOptionIndex","_","_2","selectors","inputs","outputs","decls","vars","template","QuestionComponent_Template","rf","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Questions\\question\\question.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\ninterface Question {\r\n  id: string;\r\n  text: string;\r\n  options: string[];\r\n  selectedOptionIndex?: number;  // Ajouté pour suivre l'option sélectionnée\r\n}\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent {\r\n  @Input() question!: Question;\r\n  @Output() optionSelected = new EventEmitter<{questionId: string, selectedOptionIndex: number}>();\r\n\r\n  onOptionSelected(optionIndex: number): void {\r\n    this.optionSelected.emit({questionId: this.question.id, selectedOptionIndex: optionIndex});\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}