{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AttemptComponent_div_0_div_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 4);\n    i0.ɵɵlistener(\"change\", function AttemptComponent_div_0_div_4_div_3_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const option_r4 = restoredCtx.$implicit;\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onAnswer(question_r2.id, option_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", question_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction AttemptComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AttemptComponent_div_0_div_4_div_3_Template, 3, 2, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nfunction AttemptComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AttemptComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.submitQuiz());\n    });\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_Template, 4, 2, \"div\", 2);\n    i0.ɵɵelementStart(5, \"button\", 3);\n    i0.ɵɵtext(6, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quiz.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.quiz.questions);\n  }\n}\nexport class AttemptComponent {\n  constructor(quizService, route) {\n    this.quizService = quizService;\n    this.route = route;\n    this.studentResponses = {}; // Utilisez number si vous enregistrez des indices\n    this.studentName = ''; // Nom de l'étudiant\n    this.feedback = ''; // Feedback de l'étudiant\n  }\n  ngOnInit() {\n    const quizId = this.route.snapshot.paramMap.get('id');\n    if (quizId) {\n      this.quizService.getQuizById(quizId).subscribe(quiz => this.quiz = quiz, error => console.error('Error loading quiz:', error));\n    }\n  }\n  onAnswer(questionId, optionIndex) {\n    this.studentResponses[questionId] = optionIndex;\n  }\n  submitAttempt() {\n    const attempt = {\n      quizId: this.quiz?.id,\n      responses: this.studentResponses,\n      username: this.studentName,\n      feedback: this.feedback,\n      attemptDate: new Date(),\n      score: this.calculateScore() // Supposons que vous avez une fonction pour calculer le score\n    };\n    this.quizService.submitAttempt(attempt).subscribe(result => console.log('Attempt submitted successfully', result), error => console.error('Error submitting attempt', error));\n  }\n  // Supposons que vous avez une méthode pour calculer le score\n  calculateScore() {\n    let score = 0;\n    // Logique de calcul du score basée sur les réponses de l'étudiant\n    return score;\n  }\n  static #_ = this.ɵfac = function AttemptComponent_Factory(t) {\n    return new (t || AttemptComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttemptComponent,\n    selectors: [[\"app-attempts\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [\"type\", \"radio\", 3, \"name\", \"change\"]],\n    template: function AttemptComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AttemptComponent_div_0_Template, 7, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdHRlbXB0cy5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXR0ZW1wdC9hdHRlbXB0cy9hdHRlbXB0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvS0FBb0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵlistener","AttemptComponent_div_0_div_4_div_3_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r7","option_r4","$implicit","question_r2","ɵɵnextContext","ctx_r5","ɵɵresetView","onAnswer","id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","ɵɵtemplate","AttemptComponent_div_0_div_4_div_3_Template","ɵɵtextInterpolate","text","options","AttemptComponent_div_0_Template_form_ngSubmit_3_listener","_r10","ctx_r9","submitQuiz","AttemptComponent_div_0_div_4_Template","ctx_r0","quiz","title","questions","AttemptComponent","constructor","quizService","route","studentResponses","studentName","feedback","ngOnInit","quizId","snapshot","paramMap","get","getQuizById","subscribe","error","console","questionId","optionIndex","submitAttempt","attempt","responses","username","attemptDate","Date","score","calculateScore","result","log","_","ɵɵdirectiveInject","i1","QuizService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","AttemptComponent_Template","rf","ctx","AttemptComponent_div_0_Template"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.ts"],"sourcesContent":["<div *ngIf=\"quiz\">\r\n    <h1>{{ quiz.title }}</h1>\r\n    <form (ngSubmit)=\"submitQuiz()\">\r\n      <div *ngFor=\"let question of quiz.questions\">\r\n        <h2>{{ question.text }}</h2>\r\n        <div *ngFor=\"let option of question.options\">\r\n          <input type=\"radio\" [name]=\"question.id\" (change)=\"onAnswer(question.id, option)\">\r\n          {{ option }}\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service';\r\n\r\ninterface Question {\r\n  id: string;\r\n  text: string;\r\n  options: string[];\r\n}\r\n\r\ninterface Quiz {\r\n  id: string;\r\n  title: string;\r\n  questions: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-attempts',\r\n  templateUrl: './attempts.component.html',\r\n  styleUrls: ['./attempts.component.css']\r\n})\r\nexport class AttemptComponent implements OnInit {\r\n  quiz?: Quiz;\r\n  studentResponses: { [questionId: string]: number } = {};  // Utilisez number si vous enregistrez des indices\r\n  studentName: string = '';  // Nom de l'étudiant\r\n  feedback: string = '';  // Feedback de l'étudiant\r\n\r\n  constructor(private quizService: QuizService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    const quizId = this.route.snapshot.paramMap.get('id');\r\n    if (quizId) {\r\n      this.quizService.getQuizById(quizId).subscribe(\r\n        (quiz: Quiz) => this.quiz = quiz,\r\n        (error) => console.error('Error loading quiz:', error)\r\n      );\r\n    }\r\n  }\r\n\r\n  onAnswer(questionId: string, optionIndex: number): void {\r\n    this.studentResponses[questionId] = optionIndex;\r\n  }\r\n\r\n  submitAttempt(): void {\r\n    const attempt = {\r\n      quizId: this.quiz?.id,\r\n      responses: this.studentResponses,\r\n      username: this.studentName,\r\n      feedback: this.feedback,\r\n      attemptDate: new Date(),\r\n      score: this.calculateScore()  // Supposons que vous avez une fonction pour calculer le score\r\n    };\r\n\r\n    this.quizService.submitAttempt(attempt).subscribe(\r\n      result => console.log('Attempt submitted successfully', result),\r\n      error => console.error('Error submitting attempt', error)\r\n    );\r\n  }\r\n\r\n  // Supposons que vous avez une méthode pour calculer le score\r\n  private calculateScore(): number {\r\n    let score = 0;\r\n    // Logique de calcul du score basée sur les réponses de l'étudiant\r\n    return score;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}