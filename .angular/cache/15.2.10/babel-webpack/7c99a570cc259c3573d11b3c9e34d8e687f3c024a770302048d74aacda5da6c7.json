{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service-module.service\";\nimport * as i2 from \"@angular/common\";\nfunction ModuleListComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\", 5)(2, \"div\", 1)(3, \"div\", 6);\n    i0.ɵɵelement(4, \"div\", 7);\n    i0.ɵɵelementStart(5, \"div\", 8)(6, \"h4\", 9);\n    i0.ɵɵtext(7, \"Module\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const m_r1 = ctx.$implicit;\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"Cr\\u00E9dit: \", m_r1.nameModule, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Cr\\u00E9dit: \", m_r1.credit, \"\");\n  }\n}\nexport class ModuleListComponent {\n  constructor(serviceModule) {\n    this.serviceModule = serviceModule;\n    this.module = [];\n  }\n  deleteModule(moduleId) {\n    this.serviceModule.deleteModule(moduleId).subscribe(response => {\n      console.log('Module Deleted successfully', response);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  updateModule(moduleId, newData) {\n    this.serviceModule.updateModule(moduleId, newData).subscribe(response => {\n      console.log('Module Updated successfully', response);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  getAllModules() {\n    this.serviceModule.getModules().subscribe(modules => {\n      console.log('List of Modules:', modules);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  getModuleById(moduleId) {\n    this.serviceModule.getModuleById(moduleId).subscribe(module => {\n      console.log('Module Details:', module);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  static #_ = this.ɵfac = function ModuleListComponent_Factory(t) {\n    return new (t || ModuleListComponent)(i0.ɵɵdirectiveInject(i1.ServiceModuleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModuleListComponent,\n    selectors: [[\"app-module-list\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[\"id\", \"main-wrapper\"], [1, \"col-xl-12\"], [\"id\", \"folder\", 1, \"folder-structure\", \"dlab-scroll\"], [4, \"ngFor\", \"ngForOf\"], [1, \"table-pagination\", \"border-top\"], [1, \"row\", \"gx-0\"], [1, \"file-list\"], [1, \"dz-media\"], [1, \"dz-info\"], [1, \"title\"]],\n    template: function ModuleListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"ul\", 2);\n        i0.ɵɵtemplate(3, ModuleListComponent_li_3_Template, 12, 2, \"li\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 4)(6, \"p\");\n        i0.ɵɵtext(7, \"Showing \");\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9, \"1-5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" from \");\n        i0.ɵɵelementStart(11, \"span\");\n        i0.ɵɵtext(12, \"100\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" data\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.module);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2R1bGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZnJvbnQvbW9kdWxlLWxpc3QvbW9kdWxlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","m_r1","nameModule","credit","ModuleListComponent","constructor","serviceModule","module","deleteModule","moduleId","subscribe","response","console","log","error","updateModule","newData","getAllModules","getModules","modules","getModuleById","_","ɵɵdirectiveInject","i1","ServiceModuleService","_2","selectors","decls","vars","consts","template","ModuleListComponent_Template","rf","ctx","ɵɵtemplate","ModuleListComponent_li_3_Template","ɵɵproperty"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\front\\module-list\\module-list.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\front\\module-list\\module-list.component.ts"],"sourcesContent":["<!-- Main Wrapper Start -->\r\n<div id=\"main-wrapper\">\r\n    \r\n                      <!-- File List Column -->\r\n                      <div class=\"col-xl-12\">\r\n                        <ul class=\"folder-structure dlab-scroll\" id=\"folder\">\r\n                          <!-- Dynamic File List using *ngFor -->\r\n                          <li *ngFor=\"let m of module\">\r\n                            <div class=\"row gx-0\">\r\n                              <div class=\"col-xl-12\">\r\n                                <div class=\"file-list\">\r\n                                  <div class=\"dz-media\">\r\n                                    <!-- SVG Folder Icon -->\r\n                                    <!-- ... -->\r\n                                  </div>\r\n                                  <div class=\"dz-info\">\r\n                                    <!-- Updated to use routerLink -->\r\n                                    \r\n                                      <h4 class=\"title\">Module</h4>\r\n                                      <span>Crédit: {{ m.nameModule }}</span>\r\n                                      <span>Crédit: {{ m.credit }}</span>\r\n                                    \r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                          <!-- ... More list items -->\r\n                        </ul>\r\n                      </div>\r\n                      <!-- Pagination Section -->\r\n                      <div class=\"col-xl-12\">\r\n                        <div class=\"table-pagination border-top\">\r\n                          <p>Showing <span>1-5</span> from <span>100</span> data</p>\r\n                          <!-- Pagination Component -->\r\n                          <!-- ... -->\r\n                        </div>\r\n                      </div>\r\n                      <!-- ... More content -->\r\n                    </div>\r\n               \r\n  <!-- Main Wrapper End -->\r\n  ","import { Component } from '@angular/core';\r\nimport { ServiceModuleService } from 'src/app/services/service-module.service'; \r\n@Component({\r\n  selector: 'app-module-list',\r\n \r\n  templateUrl: './module-list.component.html',\r\n  styleUrls: ['./module-list.component.css']\r\n})\r\nexport class ModuleListComponent {\r\n \r\n\r\n  constructor(private serviceModule: ServiceModuleService){}\r\n  module: { id: number; nameModule: string; credit: string; }[] = [];\r\n  \r\n\r\n  deleteModule(moduleId: number): void {\r\n    this.serviceModule.deleteModule(moduleId).subscribe(response => {\r\n      console.log('Module Deleted successfully', response);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  updateModule(moduleId: number, newData: any): void {\r\n    this.serviceModule.updateModule(moduleId, newData).subscribe(response => {\r\n      console.log('Module Updated successfully', response);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  getAllModules(): void {\r\n    this.serviceModule.getModules().subscribe(modules => {\r\n      console.log('List of Modules:', modules);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  getModuleById(moduleId: number): void {\r\n    this.serviceModule.getModuleById(moduleId).subscribe(module => {\r\n      console.log('Module Details:', module);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}