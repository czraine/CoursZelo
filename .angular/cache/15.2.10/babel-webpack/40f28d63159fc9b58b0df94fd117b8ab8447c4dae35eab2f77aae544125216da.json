{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AttemptComponent_div_0_div_4_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 13);\n    i0.ɵɵlistener(\"change\", function AttemptComponent_div_0_div_4_li_4_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const oIndex_r6 = restoredCtx.index;\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onAnswer(question_r2.id, oIndex_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    const oIndex_r6 = ctx.index;\n    const qIndex_r3 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"option-\" + qIndex_r3 + \"-\" + oIndex_r6)(\"name\", \"question-\" + qIndex_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"option-\" + qIndex_r3 + \"-\" + oIndex_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r5);\n  }\n}\nfunction AttemptComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_li_4_Template, 4, 4, \"li\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const qIndex_r3 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", qIndex_r3 + 1, \". \", question_r2.text, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nfunction AttemptComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function AttemptComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.submitAttempt());\n    });\n    i0.ɵɵtemplate(4, AttemptComponent_div_0_div_4_Template, 5, 3, \"div\", 3);\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.studentName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Feedback (optional):\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"textarea\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function AttemptComponent_div_0_Template_textarea_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.feedback = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 10);\n    i0.ɵɵtext(14, \"Submit Attempt\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.quiz.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.quiz.questions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.studentName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.feedback);\n  }\n}\nexport class AttemptComponent {\n  constructor(quizService, route) {\n    this.quizService = quizService;\n    this.route = route;\n    this.studentResponses = {}; // Utilisez number si vous enregistrez des indices\n    this.studentName = ''; // Nom de l'étudiant\n    this.feedback = ''; // Feedback de l'étudiant\n  }\n  ngOnInit() {\n    const quizId = this.route.snapshot.paramMap.get('id');\n    if (quizId) {\n      this.quizService.getQuizById(quizId).subscribe(quiz => this.quiz = quiz, error => console.error('Error loading quiz:', error));\n    }\n  }\n  onAnswer(questionId, optionIndex) {\n    this.studentResponses[questionId] = optionIndex;\n  }\n  submitAttempt() {\n    const attempt = {\n      quizId: this.quiz?.id,\n      responses: this.studentResponses,\n      username: this.studentName,\n      feedback: this.feedback,\n      attemptDate: new Date(),\n      score: this.calculateScore() // Supposons que vous avez une fonction pour calculer le score\n    };\n    this.quizService.submitAttempt(attempt).subscribe(result => console.log('Attempt submitted successfully', result), error => console.error('Error submitting attempt', error));\n  }\n  // Supposons que vous avez une méthode pour calculer le score\n  calculateScore() {\n    let score = 0;\n    // Logique de calcul du score basée sur les réponses de l'étudiant\n    return score;\n  }\n  static #_ = this.ɵfac = function AttemptComponent_Factory(t) {\n    return new (t || AttemptComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttemptComponent,\n    selectors: [[\"app-attempts\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"quiz-container\", 4, \"ngIf\"], [1, \"quiz-container\"], [3, \"ngSubmit\"], [\"class\", \"question\", 4, \"ngFor\", \"ngForOf\"], [1, \"student-info\"], [\"for\", \"studentName\"], [\"type\", \"text\", \"id\", \"studentName\", \"name\", \"studentName\", \"placeholder\", \"Enter your name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"feedback\"], [\"for\", \"feedback\"], [\"id\", \"feedback\", \"name\", \"feedback\", \"rows\", \"4\", \"placeholder\", \"Enter any feedback here\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"submit-button\"], [1, \"question\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"id\", \"name\", \"change\"], [3, \"for\"]],\n    template: function AttemptComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AttemptComponent_div_0_Template, 15, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdHRlbXB0cy5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXR0ZW1wdC9hdHRlbXB0cy9hdHRlbXB0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvS0FBb0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵlistener","AttemptComponent_div_0_div_4_li_4_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r9","oIndex_r6","index","question_r2","ɵɵnextContext","$implicit","ctx_r7","ɵɵresetView","onAnswer","id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","qIndex_r3","ɵɵtextInterpolate","option_r5","ɵɵtemplate","AttemptComponent_div_0_div_4_li_4_Template","ɵɵtextInterpolate2","text","options","AttemptComponent_div_0_Template_form_ngSubmit_3_listener","_r12","ctx_r11","submitAttempt","AttemptComponent_div_0_div_4_Template","AttemptComponent_div_0_Template_input_ngModelChange_8_listener","$event","ctx_r13","studentName","AttemptComponent_div_0_Template_textarea_ngModelChange_12_listener","ctx_r14","feedback","ctx_r0","quiz","title","questions","AttemptComponent","constructor","quizService","route","studentResponses","ngOnInit","quizId","snapshot","paramMap","get","getQuizById","subscribe","error","console","questionId","optionIndex","attempt","responses","username","attemptDate","Date","score","calculateScore","result","log","_","ɵɵdirectiveInject","i1","QuizService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","AttemptComponent_Template","rf","ctx","AttemptComponent_div_0_Template"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Attempt\\attempts\\attempts.component.ts"],"sourcesContent":["<div *ngIf=\"quiz\" class=\"quiz-container\">\r\n    <h2>{{ quiz.title }}</h2>\r\n    <form (ngSubmit)=\"submitAttempt()\">\r\n      <div *ngFor=\"let question of quiz.questions; let qIndex = index\" class=\"question\">\r\n        <p>{{ qIndex + 1 }}. {{ question.text }}</p>\r\n        <ul>\r\n          <li *ngFor=\"let option of question.options; let oIndex = index\">\r\n            <input \r\n              type=\"radio\" \r\n              [id]=\"'option-' + qIndex + '-' + oIndex\" \r\n              [name]=\"'question-' + qIndex\" \r\n              (change)=\"onAnswer(question.id, oIndex)\"\r\n            />\r\n            <label [for]=\"'option-' + qIndex + '-' + oIndex\">{{ option }}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"student-info\">\r\n        <label for=\"studentName\">Name:</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"studentName\" \r\n          [(ngModel)]=\"studentName\" \r\n          name=\"studentName\" \r\n          placeholder=\"Enter your name\" \r\n          required \r\n        />\r\n      </div>\r\n      <div class=\"feedback\">\r\n        <label for=\"feedback\">Feedback (optional):</label>\r\n        <textarea \r\n          id=\"feedback\" \r\n          [(ngModel)]=\"feedback\" \r\n          name=\"feedback\" \r\n          rows=\"4\" \r\n          placeholder=\"Enter any feedback here\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-button\">Submit Attempt</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service';\r\n\r\ninterface Question {\r\n  id: string;\r\n  text: string;\r\n  options: string[];\r\n}\r\n\r\ninterface Quiz {\r\n  id: string;\r\n  title: string;\r\n  questions: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-attempts',\r\n  templateUrl: './attempts.component.html',\r\n  styleUrls: ['./attempts.component.css']\r\n})\r\nexport class AttemptComponent implements OnInit {\r\n  quiz?: Quiz;\r\n  studentResponses: { [questionId: string]: number } = {};  // Utilisez number si vous enregistrez des indices\r\n  studentName: string = '';  // Nom de l'étudiant\r\n  feedback: string = '';  // Feedback de l'étudiant\r\n\r\n  constructor(private quizService: QuizService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    const quizId = this.route.snapshot.paramMap.get('id');\r\n    if (quizId) {\r\n      this.quizService.getQuizById(quizId).subscribe(\r\n        (quiz: Quiz) => this.quiz = quiz,\r\n        (error) => console.error('Error loading quiz:', error)\r\n      );\r\n    }\r\n  }\r\n\r\n  onAnswer(questionId: string, optionIndex: number): void {\r\n    this.studentResponses[questionId] = optionIndex;\r\n  }\r\n\r\n  submitAttempt(): void {\r\n    const attempt = {\r\n      quizId: this.quiz?.id,\r\n      responses: this.studentResponses,\r\n      username: this.studentName,\r\n      feedback: this.feedback,\r\n      attemptDate: new Date(),\r\n      score: this.calculateScore()  // Supposons que vous avez une fonction pour calculer le score\r\n    };\r\n\r\n    this.quizService.submitAttempt(attempt).subscribe(\r\n      result => console.log('Attempt submitted successfully', result),\r\n      error => console.error('Error submitting attempt', error)\r\n    );\r\n  }\r\n\r\n  // Supposons que vous avez une méthode pour calculer le score\r\n  private calculateScore(): number {\r\n    let score = 0;\r\n    // Logique de calcul du score basée sur les réponses de l'étudiant\r\n    return score;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}