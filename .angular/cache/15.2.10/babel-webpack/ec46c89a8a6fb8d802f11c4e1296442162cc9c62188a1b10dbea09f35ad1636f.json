{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet QuestionComponent = class QuestionComponent {\n  constructor(route, router, quizService) {\n    this.route = route;\n    this.router = router;\n    this.quizService = quizService;\n    this.responses = {}; // Stores the student's selected options\n    this.studentName = '';\n    this.feedback = '';\n  }\n  ngOnInit() {\n    const quizId = this.route.snapshot.paramMap.get('quizId');\n    if (quizId) {\n      this.quizService.getQuiz(quizId).subscribe(quizData => {\n        this.quiz = quizData;\n      }, error => {\n        console.error('Error loading quiz', error);\n      });\n    }\n  }\n  selectOption(questionId, optionIndex) {\n    this.responses[questionId] = optionIndex;\n  }\n  submitAttempt() {\n    const attemptData = {\n      quizId: this.quiz.id,\n      studentName: this.studentName,\n      responses: this.responses,\n      feedback: this.feedback\n    };\n    // Call to the service to submit the attempt\n    // Assuming you have a method in your QuizService to handle this\n  }\n};\nQuestionComponent = __decorate([Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})], QuestionComponent);\nexport { QuestionComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAFxB,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAPrB,KAAAC,SAAS,GAA8B,EAAE,CAAC,CAAC;IAC3C,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,QAAQ,GAAW,EAAE;EAMlB;EAEHC,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzD,IAAIH,MAAM,EAAE;MACV,IAAI,CAACL,WAAW,CAACS,OAAO,CAACJ,MAAM,CAAC,CAACK,SAAS,CACvCC,QAAQ,IAAI;QACX,IAAI,CAACC,IAAI,GAAGD,QAAQ;MACtB,CAAC,EACAE,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CACF;;EAEL;EAEAE,YAAYA,CAACC,UAAkB,EAAEC,WAAmB;IAClD,IAAI,CAAChB,SAAS,CAACe,UAAU,CAAC,GAAGC,WAAW;EAC1C;EAEAC,aAAaA,CAAA;IACX,MAAMC,WAAW,GAAG;MAClBd,MAAM,EAAE,IAAI,CAACO,IAAI,CAACQ,EAAE;MACpBlB,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BD,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBE,QAAQ,EAAE,IAAI,CAACA;KAChB;IACD;IACA;EACF;CACD;AAxCYP,iBAAiB,GAAAyB,UAAA,EAL7B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW5B,iBAAiB,CAwC7B;SAxCYA,iBAAiB","names":["Component","QuestionComponent","constructor","route","router","quizService","responses","studentName","feedback","ngOnInit","quizId","snapshot","paramMap","get","getQuiz","subscribe","quizData","quiz","error","console","selectOption","questionId","optionIndex","submitAttempt","attemptData","id","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Questions\\question\\question.component.ts"],"sourcesContent":["\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent {\r\n  quiz: any; // Replace 'any' with the proper type for your quiz\r\n  responses: { [key: string]: number } = {}; // Stores the student's selected options\r\n  studentName: string = '';\r\n  feedback: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute, \r\n    private router: Router, \r\n    private quizService: QuizService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const quizId = this.route.snapshot.paramMap.get('quizId');\r\n    if (quizId) {\r\n      this.quizService.getQuiz(quizId).subscribe(\r\n        (quizData) => {\r\n          this.quiz = quizData;\r\n        },\r\n        (error) => {\r\n          console.error('Error loading quiz', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  selectOption(questionId: string, optionIndex: number): void {\r\n    this.responses[questionId] = optionIndex;\r\n  }\r\n\r\n  submitAttempt(): void {\r\n    const attemptData = {\r\n      quizId: this.quiz.id,\r\n      studentName: this.studentName,\r\n      responses: this.responses,\r\n      feedback: this.feedback\r\n    };\r\n    // Call to the service to submit the attempt\r\n    // Assuming you have a method in your QuizService to handle this\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}