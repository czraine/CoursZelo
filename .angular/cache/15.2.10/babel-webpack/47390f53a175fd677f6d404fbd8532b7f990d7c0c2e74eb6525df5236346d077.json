{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/QuizService/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CreateQuizComponent_div_9_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 34);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_div_5_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const oIndex_r6 = restoredCtx.index;\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.options[oIndex_r6] = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const oIndex_r6 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext();\n    const qIndex_r3 = ctx_r10.index;\n    const question_r2 = ctx_r10.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"for\", \"option-\", qIndex_r3, \"-\", oIndex_r6, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Option \", oIndex_r6 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"id\", \"option-\", qIndex_r3, \"-\", oIndex_r6, \"\")(\"name\", \"option-\", qIndex_r3, \"-\", oIndex_r6, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r2.options[oIndex_r6]);\n  }\n}\nfunction CreateQuizComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"label\", 29);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const question_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(question_r2.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, CreateQuizComponent_div_9_div_5_Template, 4, 8, \"div\", 31);\n    i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 29);\n    i0.ɵɵtext(8, \"Correct Answer Index\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 32);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_input_ngModelChange_9_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const question_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(question_r2.correctAnswerIndex = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 29);\n    i0.ɵɵtext(12, \"Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"textarea\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_div_9_Template_textarea_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const question_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(question_r2.feedback = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const qIndex_r3 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"question-\", qIndex_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Question \", qIndex_r3 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"question-\", qIndex_r3, \"\")(\"name\", \"question-\", qIndex_r3, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"correctAnswer-\", qIndex_r3, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"correctAnswer-\", qIndex_r3, \"\")(\"name\", \"correctAnswer-\", qIndex_r3, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r2.correctAnswerIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"feedback-\", qIndex_r3, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"feedback-\", qIndex_r3, \"\")(\"name\", \"feedback-\", qIndex_r3, \"\");\n    i0.ɵɵproperty(\"ngModel\", question_r2.feedback);\n  }\n}\nexport class CreateQuizComponent {\n  constructor(quizService, router) {\n    this.quizService = quizService;\n    this.router = router;\n    this.quiz = {\n      title: '',\n      questions: [],\n      createdDate: new Date(),\n      creator: '',\n      status: 'Draft',\n      maxAttempts: 1,\n      showAnswers: false,\n      showScore: false,\n      passMark: 0,\n      scheduleDate: new Date(),\n      durationInSeconds: 0,\n      randomizeQuestions: false\n    };\n  }\n  addQuestion() {\n    const newQuestion = {\n      text: '',\n      options: [],\n      correctAnswerIndex: -1\n    }; // Default empty question\n    this.quiz.questions.push(newQuestion);\n  }\n  saveQuiz() {\n    // Update or create based on the quiz's presence in the database\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\n    operation.subscribe(response => {\n      console.log('Quiz saved successfully', response);\n      this.router.navigate(['/quiz-list']);\n    }, error => {\n      console.error('Error saving quiz', error);\n    });\n  }\n  static #_ = this.ɵfac = function CreateQuizComponent_Factory(t) {\n    return new (t || CreateQuizComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateQuizComponent,\n    selectors: [[\"app-create-quiz\"]],\n    decls: 54,\n    vars: 12,\n    consts: [[1, \"quiz-management-container\"], [3, \"ngSubmit\"], [\"quizForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"for\", \"creator\"], [\"type\", \"text\", \"id\", \"creator\", \"name\", \"creator\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Draft\"], [\"value\", \"Published\"], [\"for\", \"maxAttempts\"], [\"type\", \"number\", \"id\", \"maxAttempts\", \"name\", \"maxAttempts\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"showAnswers\"], [\"type\", \"checkbox\", \"id\", \"showAnswers\", \"name\", \"showAnswers\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"showScore\"], [\"type\", \"checkbox\", \"id\", \"showScore\", \"name\", \"showScore\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"passMark\"], [\"type\", \"number\", \"id\", \"passMark\", \"name\", \"passMark\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"scheduleDate\"], [\"type\", \"datetime-local\", \"id\", \"scheduleDate\", \"name\", \"scheduleDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"durationInSeconds\"], [\"type\", \"number\", \"id\", \"durationInSeconds\", \"name\", \"durationInSeconds\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"randomizeQuestions\"], [\"type\", \"checkbox\", \"id\", \"randomizeQuestions\", \"name\", \"randomizeQuestions\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"for\"], [\"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"required\", \"\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [1, \"form-control\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"text\", 1, \"form-control\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"]],\n    template: function CreateQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateQuizComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.saveQuiz();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.quiz.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, CreateQuizComponent_div_9_Template, 14, 14, \"div\", 6);\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateQuizComponent_Template_button_click_10_listener() {\n          return ctx.addQuestion();\n        });\n        i0.ɵɵtext(11, \"Add Question\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Creator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.quiz.creator = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.quiz.status = $event;\n        });\n        i0.ɵɵelementStart(20, \"option\", 12);\n        i0.ɵɵtext(21, \"Draft\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\", 13);\n        i0.ɵɵtext(23, \"Published\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Max Attempts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.quiz.maxAttempts = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 16);\n        i0.ɵɵtext(30, \"Show Answers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.quiz.showAnswers = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 3)(33, \"label\", 18);\n        i0.ɵɵtext(34, \"Show Score\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_35_listener($event) {\n          return ctx.quiz.showScore = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 3)(37, \"label\", 20);\n        i0.ɵɵtext(38, \"Pass Mark\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"input\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_39_listener($event) {\n          return ctx.quiz.passMark = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 3)(41, \"label\", 22);\n        i0.ɵɵtext(42, \"Schedule Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"input\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_43_listener($event) {\n          return ctx.quiz.scheduleDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 3)(45, \"label\", 24);\n        i0.ɵɵtext(46, \"Duration (in seconds)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"input\", 25);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_47_listener($event) {\n          return ctx.quiz.durationInSeconds = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"div\", 3)(49, \"label\", 26);\n        i0.ɵɵtext(50, \"Randomize Questions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"input\", 27);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateQuizComponent_Template_input_ngModelChange_51_listener($event) {\n          return ctx.quiz.randomizeQuestions = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"button\", 28);\n        i0.ɵɵtext(53, \"Save Quiz\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.quiz.id ? \"Edit\" : \"Create\", \" Quiz\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quiz.questions);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.creator);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.status);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.maxAttempts);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.showAnswers);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.showScore);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.passMark);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.scheduleDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.durationInSeconds);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quiz.randomizeQuestions);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.CheckboxControlValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\r\\n    max-width: 800px;\\r\\n    margin: auto;\\r\\n    padding: 1rem;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 1rem;\\r\\n  }\\r\\n  \\r\\n  .form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 0.5rem;\\r\\n    margin-top: 0.25rem;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 0.25rem;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%] {\\r\\n    padding: 0.5rem 1rem;\\r\\n    border: none;\\r\\n    border-radius: 0.25rem;\\r\\n    cursor: pointer;\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .btn[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\r\\n  \\r\\n  .questions-section[_ngcontent-%COMP%] {\\r\\n    border-top: 2px solid #eee;\\r\\n    padding-top: 1rem;\\r\\n    margin-top: 1rem;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS1xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0NBQWtDO0FBQ2xDO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSwwQkFBMEI7SUFDMUIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJjcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogcXVpei1tYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MgKi9cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tY29udHJvbCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDAuNXJlbTtcclxuICAgIG1hcmdpbi10b3A6IDAuMjVyZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmJ0biB7XHJcbiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAuYnRuOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgfVxyXG4gIFxyXG4gIC5xdWVzdGlvbnMtc2VjdGlvbiB7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgI2VlZTtcclxuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICB9XHJcbiAgIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvUXVpei9jcmVhdGUtcXVpei9jcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtDQUFrQztBQUNsQztJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtFQUNmOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztJQUNYLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsMEJBQTBCO0lBQzFCLGlCQUFpQjtJQUNqQixnQkFBZ0I7RUFDbEI7O0FBRUYsZ2xEQUFnbEQiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBxdWl6LW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyAqL1xyXG4uY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1jb250cm9sIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgbWFyZ2luLXRvcDogMC4yNXJlbTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gIH1cclxuICBcclxuICAuYnRuIHtcclxuICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9ucy1zZWN0aW9uIHtcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjZWVlO1xyXG4gICAgcGFkZGluZy10b3A6IDFyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateQuizComponent_div_9_div_5_Template_input_ngModelChange_3_listener","$event","restoredCtx","ɵɵrestoreView","_r9","oIndex_r6","index","question_r2","ɵɵnextContext","$implicit","ɵɵresetView","options","ɵɵadvance","ɵɵpropertyInterpolate2","qIndex_r3","ɵɵtextInterpolate1","ɵɵproperty","CreateQuizComponent_div_9_Template_input_ngModelChange_4_listener","_r12","text","ɵɵtemplate","CreateQuizComponent_div_9_div_5_Template","CreateQuizComponent_div_9_Template_input_ngModelChange_9_listener","correctAnswerIndex","CreateQuizComponent_div_9_Template_textarea_ngModelChange_13_listener","feedback","ɵɵpropertyInterpolate1","CreateQuizComponent","constructor","quizService","router","quiz","title","questions","createdDate","Date","creator","status","maxAttempts","showAnswers","showScore","passMark","scheduleDate","durationInSeconds","randomizeQuestions","addQuestion","newQuestion","push","saveQuiz","operation","id","updateQuiz","createQuiz","subscribe","response","console","log","navigate","error","_","ɵɵdirectiveInject","i1","QuizService","i2","Router","_2","selectors","decls","vars","consts","template","CreateQuizComponent_Template","rf","ctx","CreateQuizComponent_Template_form_ngSubmit_3_listener","CreateQuizComponent_Template_input_ngModelChange_8_listener","CreateQuizComponent_div_9_Template","CreateQuizComponent_Template_button_click_10_listener","CreateQuizComponent_Template_input_ngModelChange_15_listener","CreateQuizComponent_Template_select_ngModelChange_19_listener","CreateQuizComponent_Template_input_ngModelChange_27_listener","CreateQuizComponent_Template_input_ngModelChange_31_listener","CreateQuizComponent_Template_input_ngModelChange_35_listener","CreateQuizComponent_Template_input_ngModelChange_39_listener","CreateQuizComponent_Template_input_ngModelChange_43_listener","CreateQuizComponent_Template_input_ngModelChange_47_listener","CreateQuizComponent_Template_input_ngModelChange_51_listener"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\Quiz\\create-quiz\\create-quiz.component.ts"],"sourcesContent":["<!-- quiz-management.component.html -->\r\n<div class=\"quiz-management-container\">\r\n    <h1>{{ quiz.id ? 'Edit' : 'Create' }} Quiz</h1>\r\n    <form #quizForm=\"ngForm\" (ngSubmit)=\"saveQuiz()\">\r\n  \r\n      <!-- Quiz Title -->\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" id=\"title\" class=\"form-control\" [(ngModel)]=\"quiz.title\" name=\"title\" required>\r\n      </div>\r\n  \r\n      <!-- Questions -->\r\n      <div *ngFor=\"let question of quiz.questions; let qIndex = index\">\r\n        <!-- Question Text -->\r\n        <div class=\"form-group\">\r\n          <label for=\"question-{{qIndex}}\">Question {{qIndex + 1}}</label>\r\n          <input type=\"text\" id=\"question-{{qIndex}}\" class=\"form-control\" [(ngModel)]=\"question.text\" name=\"question-{{qIndex}}\" required>\r\n        </div>\r\n  \r\n        <!-- Question Options (Assuming 'options' is an array of strings) -->\r\n        <div *ngFor=\"let option of question.options; let oIndex = index\" class=\"form-group\">\r\n          <label for=\"option-{{qIndex}}-{{oIndex}}\">Option {{oIndex + 1}}</label>\r\n          <input type=\"text\" id=\"option-{{qIndex}}-{{oIndex}}\" class=\"form-control\" [(ngModel)]=\"question.options[oIndex]\" name=\"option-{{qIndex}}-{{oIndex}}\">\r\n        </div>\r\n  \r\n        <!-- Correct Answer Index -->\r\n        <div class=\"form-group\">\r\n          <label for=\"correctAnswer-{{qIndex}}\">Correct Answer Index</label>\r\n          <input type=\"number\" id=\"correctAnswer-{{qIndex}}\" class=\"form-control\" [(ngModel)]=\"question.correctAnswerIndex\" name=\"correctAnswer-{{qIndex}}\" required>\r\n        </div>\r\n  \r\n        <!-- Feedback -->\r\n        <div class=\"form-group\">\r\n          <label for=\"feedback-{{qIndex}}\">Feedback</label>\r\n          <textarea id=\"feedback-{{qIndex}}\" class=\"form-control\" [(ngModel)]=\"question.feedback\" name=\"feedback-{{qIndex}}\"></textarea>\r\n        </div>\r\n      </div>\r\n  \r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"addQuestion()\">Add Question</button>\r\n  \r\n      <!-- Creator -->\r\n      <div class=\"form-group\">\r\n        <label for=\"creator\">Creator</label>\r\n        <input type=\"text\" id=\"creator\" class=\"form-control\" [(ngModel)]=\"quiz.creator\" name=\"creator\" required>\r\n      </div>\r\n  \r\n      <!-- Status -->\r\n      <div class=\"form-group\">\r\n        <label for=\"status\">Status</label>\r\n        <select id=\"status\" class=\"form-control\" [(ngModel)]=\"quiz.status\" name=\"status\" required>\r\n          <option value=\"Draft\">Draft</option>\r\n          <option value=\"Published\">Published</option>\r\n        </select>\r\n      </div>\r\n  \r\n      <!-- Max Attempts -->\r\n      <div class=\"form-group\">\r\n        <label for=\"maxAttempts\">Max Attempts</label>\r\n        <input type=\"number\" id=\"maxAttempts\" class=\"form-control\" [(ngModel)]=\"quiz.maxAttempts\" name=\"maxAttempts\" required>\r\n      </div>\r\n  \r\n      <!-- Show Answers -->\r\n      <div class=\"form-group\">\r\n        <label for=\"showAnswers\">Show Answers</label>\r\n        <input type=\"checkbox\" id=\"showAnswers\" [(ngModel)]=\"quiz.showAnswers\" name=\"showAnswers\">\r\n      </div>\r\n  \r\n      <!-- Show Score -->\r\n      <div class=\"form-group\">\r\n        <label for=\"showScore\">Show Score</label>\r\n        <input type=\"checkbox\" id=\"showScore\" [(ngModel)]=\"quiz.showScore\" name=\"showScore\">\r\n      </div>\r\n  \r\n      <!-- Pass Mark -->\r\n      <div class=\"form-group\">\r\n        <label for=\"passMark\">Pass Mark</label>\r\n        <input type=\"number\" id=\"passMark\" class=\"form-control\" [(ngModel)]=\"quiz.passMark\" name=\"passMark\" required>\r\n      </div>\r\n  \r\n      <!-- Schedule Date -->\r\n      <div class=\"form-group\">\r\n        <label for=\"scheduleDate\">Schedule Date</label>\r\n        <input type=\"datetime-local\" id=\"scheduleDate\" class=\"form-control\" [(ngModel)]=\"quiz.scheduleDate\" name=\"scheduleDate\">\r\n      </div>\r\n  \r\n      <!-- Duration in Seconds -->\r\n      <div class=\"form-group\">\r\n        <label for=\"durationInSeconds\">Duration (in seconds)</label>\r\n        <input type=\"number\" id=\"durationInSeconds\" class=\"form-control\" [(ngModel)]=\"quiz.durationInSeconds\" name=\"durationInSeconds\" required>\r\n      </div>\r\n  \r\n      <!-- Randomize Questions -->\r\n      <div class=\"form-group\">\r\n        <label for=\"randomizeQuestions\">Randomize Questions</label>\r\n        <input type=\"checkbox\" id=\"randomizeQuestions\" [(ngModel)]=\"quiz.randomizeQuestions\" name=\"randomizeQuestions\">\r\n      </div>\r\n  \r\n      <!-- Save Quiz Button -->\r\n      <button type=\"submit\" class=\"btn btn-primary\">Save Quiz</button>\r\n    </form>\r\n  </div>\r\n  ","import { Component } from '@angular/core';\r\nimport { QuizService } from 'src/app/QuizService/quiz.service'; \r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-quiz',\r\n  templateUrl: './create-quiz.component.html',\r\n  styleUrls: ['./create-quiz.component.css']\r\n})\r\nexport class CreateQuizComponent {\r\n  quiz: any = {\r\n    title: '',\r\n    questions: [],\r\n    createdDate: new Date(), // Assuming handling on the frontend for simplicity\r\n    creator: '', // This should be set based on the logged-in user or similar\r\n    status: 'Draft', // Default status\r\n    maxAttempts: 1,\r\n    showAnswers: false,\r\n    showScore: false,\r\n    passMark: 0,\r\n    scheduleDate: new Date(), // Set a default or use a date picker in the UI\r\n    durationInSeconds: 0,\r\n    randomizeQuestions: false\r\n  };\r\n\r\n  constructor(private quizService: QuizService, private router: Router) {}\r\n\r\n  addQuestion(): void {\r\n    const newQuestion = { text: '', options: [], correctAnswerIndex: -1 }; // Default empty question\r\n    this.quiz.questions.push(newQuestion);\r\n  }\r\n\r\n  saveQuiz(): void {\r\n    // Update or create based on the quiz's presence in the database\r\n    const operation = this.quiz.id ? this.quizService.updateQuiz(this.quiz.id, this.quiz) : this.quizService.createQuiz(this.quiz);\r\n    \r\n    operation.subscribe(response => {\r\n      console.log('Quiz saved successfully', response);\r\n      this.router.navigate(['/quiz-list']);\r\n    }, error => {\r\n      console.error('Error saving quiz', error);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}