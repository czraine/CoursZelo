{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service-module.service\";\nexport class ModuleListComponent {\n  ngOnInit() {\n    this.getAllModules();\n    console.log(\"ok\");\n    this.list = this.module;\n  }\n  constructor(serviceModule) {\n    this.serviceModule = serviceModule;\n    this.module = [];\n  }\n  deleteModule(moduleId) {\n    this.serviceModule.deleteModule(moduleId).subscribe(response => {\n      console.log('Module Deleted successfully', response);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  updateModule(moduleId, newData) {\n    this.serviceModule.updateModule(moduleId, newData).subscribe(response => {\n      console.log('Module Updated successfully', response);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  getAllModules() {\n    this.serviceModule.getModules().subscribe(modules => {\n      this.list = modules;\n      console.log('List of Modules:', modules);\n      console.log('bravo');\n    }, error => {\n      console.error('There was an error!', error);\n      console.log(\"erreur msg\" || error);\n    });\n  }\n  getModuleById(moduleId) {\n    this.serviceModule.getModuleById(moduleId).subscribe(module => {\n      console.log('Module Details:', module);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  static #_ = this.ɵfac = function ModuleListComponent_Factory(t) {\n    return new (t || ModuleListComponent)(i0.ɵɵdirectiveInject(i1.ServiceModuleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModuleListComponent,\n    selectors: [[\"app-module-list\"]],\n    decls: 0,\n    vars: 0,\n    template: function ModuleListComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2R1bGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZnJvbnQvbW9kdWxlLWxpc3QvbW9kdWxlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAI/BC,QAAQA,CAAA;IAEP,IAAI,CAACC,aAAa,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI,CAACC,IAAI,GAAC,IAAI,CAACC,MAAM;EAEtB;EAECC,YAAoBC,aAAmC;IAAnC,KAAAA,aAAa,GAAbA,aAAa;IAVjC,KAAAF,MAAM,GAA0D,EAAE;EAUT;EAGzDG,YAAYA,CAACC,QAAgB;IAC3B,IAAI,CAACF,aAAa,CAACC,YAAY,CAACC,QAAQ,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MAC7DT,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEQ,QAAQ,CAAC;IACtD,CAAC,EAAEC,KAAK,IAAG;MACTV,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACJ,QAAgB,EAAEK,OAAY;IACzC,IAAI,CAACP,aAAa,CAACM,YAAY,CAACJ,QAAQ,EAAEK,OAAO,CAAC,CAACJ,SAAS,CAACC,QAAQ,IAAG;MACtET,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEQ,QAAQ,CAAC;IACtD,CAAC,EAAEC,KAAK,IAAG;MACTV,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAX,aAAaA,CAAA;IACX,IAAI,CAACM,aAAa,CAACQ,UAAU,EAAE,CAACL,SAAS,CAACM,OAAO,IAAG;MAClD,IAAI,CAACZ,IAAI,GAACY,OAAO;MACjBd,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEa,OAAO,CAAC;MACxCd,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC,EAAES,KAAK,IAAG;MACTV,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CV,OAAO,CAACC,GAAG,CAAC,YAAY,IAAIS,KAAK,CAAC;IACpC,CAAC,CAAC;EAEJ;EAEAK,aAAaA,CAACR,QAAgB;IAC5B,IAAI,CAACF,aAAa,CAACU,aAAa,CAACR,QAAQ,CAAC,CAACC,SAAS,CAACL,MAAM,IAAG;MAC5DH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,MAAM,CAAC;IACxC,CAAC,EAAEO,KAAK,IAAG;MACTV,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAAC,QAAAM,CAAA;qBAjDUnB,mBAAmB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA;UAAnBxB,mBAAmB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAAC,MAAA;EAAA","names":["ModuleListComponent","ngOnInit","getAllModules","console","log","list","module","constructor","serviceModule","deleteModule","moduleId","subscribe","response","error","updateModule","newData","getModules","modules","getModuleById","_","i0","ɵɵdirectiveInject","i1","ServiceModuleService","_2","selectors","decls","vars","template","ModuleListComponent_Template","rf","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\front\\module-list\\module-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ServiceModuleService } from 'src/app/services/service-module.service'; \r\n@Component({\r\n  selector: 'app-module-list',\r\n \r\n  templateUrl: './module-list.component.html',\r\n  styleUrls: ['./module-list.component.css']\r\n})\r\nexport class ModuleListComponent {\r\n  list: any;\r\n  module: { id: number; nameModule: string; credit: string; }[] = [];\r\n\r\n ngOnInit(): void {\r\n\r\n  this.getAllModules();\r\n  console.log(\"ok\");\r\n  this.list=this.module;\r\n\r\n }\r\n\r\n  constructor(private serviceModule: ServiceModuleService){}\r\n  \r\n\r\n  deleteModule(moduleId: number): void {\r\n    this.serviceModule.deleteModule(moduleId).subscribe(response => {\r\n      console.log('Module Deleted successfully', response);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  updateModule(moduleId: number, newData: any): void {\r\n    this.serviceModule.updateModule(moduleId, newData).subscribe(response => {\r\n      console.log('Module Updated successfully', response);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  getAllModules(): void {\r\n    this.serviceModule.getModules().subscribe(modules => {\r\n      this.list=modules;\r\n      console.log('List of Modules:', modules);\r\n      console.log('bravo');\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n      console.log(\"erreur msg\" || error);\r\n    });\r\n\r\n  }\r\n\r\n  getModuleById(moduleId: number): void {\r\n    this.serviceModule.getModuleById(moduleId).subscribe(module => {\r\n      console.log('Module Details:', module);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}