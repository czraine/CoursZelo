{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ModuleListComponent = class ModuleListComponent {\n  constructor(serviceModule) {\n    this.serviceModule = serviceModule;\n    this.module = [];\n    this.selectedModule = null;\n  }\n  deleteModule(moduleId) {\n    this.serviceModule.deleteModule(moduleId).subscribe(response => {\n      console.log('Module Deleted successfully', response);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  updateModule(moduleId, newData) {\n    this.serviceModule.updateModule(moduleId, newData).subscribe(response => {\n      console.log('Module Updated successfully', response);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  getAllModules() {\n    this.serviceModule.getModules().subscribe(modules => {\n      console.log('List of Modules:', modules);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  getModuleById(moduleId) {\n    this.serviceModule.getModuleById(moduleId).subscribe(module => {\n      console.log('Module Details:', module);\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  selectModuleForEdit(module) {\n    this.selectedModule = {\n      ...module\n    };\n  }\n};\nModuleListComponent = __decorate([Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})], ModuleListComponent);\nexport { ModuleListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAE9BC,YAAoBC,aAAmC;IAAnC,KAAAA,aAAa,GAAbA,aAAa;IACjC,KAAAC,MAAM,GAA0D,EAAE;IAClE,KAAAC,cAAc,GAA+D,IAAI;EAFxB;EAKzDC,YAAYA,CAACC,QAAgB;IAC3B,IAAI,CAACJ,aAAa,CAACG,YAAY,CAACC,QAAQ,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MAC7DC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;IACtD,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACN,QAAgB,EAAEO,OAAY;IACzC,IAAI,CAACX,aAAa,CAACU,YAAY,CAACN,QAAQ,EAAEO,OAAO,CAAC,CAACN,SAAS,CAACC,QAAQ,IAAG;MACtEC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;IACtD,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAG,aAAaA,CAAA;IACX,IAAI,CAACZ,aAAa,CAACa,UAAU,EAAE,CAACR,SAAS,CAACS,OAAO,IAAG;MAClDP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEM,OAAO,CAAC;IAC1C,CAAC,EAAEL,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAM,aAAaA,CAACX,QAAgB;IAC5B,IAAI,CAACJ,aAAa,CAACe,aAAa,CAACX,QAAQ,CAAC,CAACC,SAAS,CAACJ,MAAM,IAAG;MAC5DM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,MAAM,CAAC;IACxC,CAAC,EAAEQ,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAO,mBAAmBA,CAACf,MAA2D;IAC7E,IAAI,CAACC,cAAc,GAAG;MAAE,GAAGD;IAAM,CAAE;EACrC;CAED;AA3CYH,mBAAmB,GAAAmB,UAAA,EAN/BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,iBAAiB;EAE3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWtB,mBAAmB,CA2C/B;SA3CYA,mBAAmB","names":["Component","ModuleListComponent","constructor","serviceModule","module","selectedModule","deleteModule","moduleId","subscribe","response","console","log","error","updateModule","newData","getAllModules","getModules","modules","getModuleById","selectModuleForEdit","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\front\\module-list\\module-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ServiceModuleService } from 'src/app/services/service-module.service'; \r\n@Component({\r\n  selector: 'app-module-list',\r\n \r\n  templateUrl: './module-list.component.html',\r\n  styleUrls: ['./module-list.component.css']\r\n})\r\nexport class ModuleListComponent {\r\n\r\n  constructor(private serviceModule: ServiceModuleService){}\r\n  module: { id: number; nameModule: string; credit: string; }[] = [];\r\n  selectedModule: { id: number; nameModule: string; credit: string; } | null = null;\r\n\r\n\r\n  deleteModule(moduleId: number): void {\r\n    this.serviceModule.deleteModule(moduleId).subscribe(response => {\r\n      console.log('Module Deleted successfully', response);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  updateModule(moduleId: number, newData: any): void {\r\n    this.serviceModule.updateModule(moduleId, newData).subscribe(response => {\r\n      console.log('Module Updated successfully', response);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  getAllModules(): void {\r\n    this.serviceModule.getModules().subscribe(modules => {\r\n      console.log('List of Modules:', modules);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  getModuleById(moduleId: number): void {\r\n    this.serviceModule.getModuleById(moduleId).subscribe(module => {\r\n      console.log('Module Details:', module);\r\n    }, error => {\r\n      console.error('There was an error!', error);\r\n    });\r\n  }\r\n\r\n  selectModuleForEdit(module: { id: number; nameModule: string; credit: string; }): void {\r\n    this.selectedModule = { ...module };\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}