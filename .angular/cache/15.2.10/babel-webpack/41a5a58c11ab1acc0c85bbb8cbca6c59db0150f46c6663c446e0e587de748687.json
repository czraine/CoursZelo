{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service-module.service\";\nimport * as i2 from \"@angular/common\";\nfunction ModuleListComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ModuleListComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.saveChanges());\n    });\n    i0.ɵɵtext(1, \"Save changes\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\nexport class ModuleListComponent {\n  constructor(cdRef, serviceModule) {\n    this.cdRef = cdRef;\n    this.serviceModule = serviceModule;\n    this.list = [];\n    this.modalDisplay = false;\n    this.currentModule = null;\n    this.modalMode = 'view';\n  }\n  ngOnInit() {\n    this.getAllModules();\n  }\n  openModal(module, mode = 'view') {\n    this.currentModule = module;\n    this.modalMode = mode;\n    this.modalDisplay = true;\n  }\n  closeModal() {\n    this.modalDisplay = false;\n  }\n  saveChanges() {\n    if (!this.currentModule || !this.currentModule.idModule) {\n      console.log(\"No module selected or module ID is missing\");\n      return;\n    }\n    this.updateModule(this.currentModule.idModule, this.currentModule);\n  }\n  confirmDelete(moduleId) {\n    const isConfirmed = confirm('Are you sure you want to delete this module?');\n    if (isConfirmed) {\n      this.deleteModule(moduleId);\n    }\n  }\n  deleteModule(moduleId) {\n    this.serviceModule.deleteModule(moduleId).subscribe({\n      next: () => {\n        alert(moduleId);\n        console.log(\"Module deleted successfully\");\n        this.getAllModules();\n      },\n      error: error => {\n        console.error(\"Error deleting module\", error);\n      }\n    });\n  }\n  getAllModules() {\n    this.serviceModule.getModules().subscribe({\n      next: modules => {\n        this.list = modules;\n        console.log('List of Modules updated:', this.list);\n        this.cdRef.detectChanges();\n      },\n      error: error => {\n        console.error('Error fetching modules', error);\n      }\n    });\n  }\n  updateModule(moduleId, newData) {\n    this.serviceModule.updateModule(moduleId, newData).subscribe({\n      next: response => {\n        console.log('Module Updated successfully', response);\n        this.getAllModules();\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n  }\n  getModuleById(moduleId) {\n    this.serviceModule.getModuleById(moduleId).subscribe({\n      next: module => {\n        console.log('Module Details:', module);\n        this.currentModule = module;\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n  }\n  selectModuleForEdit(moduleId) {\n    this.getModuleById(moduleId);\n    this.openModal(this.currentModule, 'edit');\n  }\n  static #_ = this.ɵfac = function ModuleListComponent_Factory(t) {\n    return new (t || ModuleListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ServiceModuleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModuleListComponent,\n    selectors: [[\"app-module-list\"]],\n    decls: 20,\n    vars: 5,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", 3, \"ngStyle\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-shadow\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-primary btn-shadow\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-shadow\", 3, \"click\"]],\n    template: function ModuleListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"link\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"body\")(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"h5\", 8);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ModuleListComponent_Template_button_click_12_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵelementStart(13, \"span\", 10);\n        i0.ɵɵtext(14, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ModuleListComponent_Template_button_click_17_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(18, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, ModuleListComponent_button_19_Template, 2, 0, \"button\", 14);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx.modalDisplay ? \"block\" : \"none\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.modalMode === \"edit\" ? \"Edit Module\" : \"Module Details\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.modalMode === \"edit\");\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2R1bGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZnJvbnQvbW9kdWxlLWxpc3QvbW9kdWxlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\", \".container[_ngcontent-%COMP%] {\\n      background: #fff;\\n      padding: 20px; \\n      border-radius: 3px; \\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n      transition: transform 0.3s;\\n    }\\n    .container[_ngcontent-%COMP%]:hover {\\n      transform: translateZ(-50px);\\n    }\\n    \\n    .btn-shadow[_ngcontent-%COMP%] {\\n      transition: all 0.3s ease;\\n      margin-right: 8px; \\n    }\\n    .btn-shadow[_ngcontent-%COMP%]:hover {\\n      transform: translateY(-2px); \\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\\n    }\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵlistener","ModuleListComponent_button_19_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","saveChanges","ɵɵtext","ɵɵelementEnd","ModuleListComponent","constructor","cdRef","serviceModule","list","modalDisplay","currentModule","modalMode","ngOnInit","getAllModules","openModal","module","mode","closeModal","idModule","console","log","updateModule","confirmDelete","moduleId","isConfirmed","confirm","deleteModule","subscribe","next","alert","error","getModules","modules","detectChanges","newData","response","getModuleById","selectModuleForEdit","_","ɵɵdirectiveInject","ChangeDetectorRef","i1","ServiceModuleService","_2","selectors","decls","vars","consts","template","ModuleListComponent_Template","rf","ctx","ɵɵelement","ModuleListComponent_Template_button_click_12_listener","ModuleListComponent_Template_button_click_17_listener","ɵɵtemplate","ModuleListComponent_button_19_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵtextInterpolate"],"sourceRoot":"","sources":["C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\front\\module-list\\module-list.component.html","C:\\Users\\Rahma\\Desktop\\Testing\\CoursZeloFront\\CoursZelo\\src\\app\\front\\module-list\\module-list.component.ts"],"sourcesContent":["<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\r\n  <style>\r\n    .container {\r\n      background: #fff;\r\n      padding: 20px; /* Ajusté de 30px à 20px pour un look plus fin */\r\n      border-radius: 3px; /* Ajusté pour un bord arrondi plus subtil */\r\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n      transition: transform 0.3s;\r\n    }\r\n    .container:hover {\r\n      transform: translateZ(-50px);\r\n    }\r\n    /* Style des boutons avec effet hover plus dynamique */\r\n    .btn-shadow {\r\n      transition: all 0.3s ease;\r\n      margin-right: 8px; /* Ajouté un espacement entre les boutons */\r\n    }\r\n    .btn-shadow:hover {\r\n      transform: translateY(-2px); /* Effet de léger soulèvement */\r\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    }\r\n    /* Autres styles... */\r\n  </style>\r\n</head>\r\n<body>\r\n  <!-- Votre structure HTML existante -->\r\n  <!-- Modal -->\r\n  <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{'display': modalDisplay ? 'block' : 'none'}\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">{{ modalMode === 'edit' ? 'Edit Module' : 'Module Details' }}</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <!-- Corps de la modal -->\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary btn-shadow\" (click)=\"closeModal()\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary btn-shadow\" *ngIf=\"modalMode === 'edit'\" (click)=\"saveChanges()\">Save changes</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</body>\r\n</html>\r\n","import { Component } from '@angular/core';\r\nimport { ServiceModuleService } from 'src/app/services/service-module.service';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-module-list',\r\n  templateUrl: './module-list.component.html',\r\n  styleUrls: ['./module-list.component.css']\r\n})\r\nexport class ModuleListComponent {\r\n  list: any[] = [];\r\n  modalDisplay = false;\r\n  currentModule: any = null;\r\n  modalMode: 'edit' | 'view' = 'view';\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private serviceModule: ServiceModuleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllModules();\r\n  }\r\n\r\n  openModal(module: any, mode: 'edit' | 'view' = 'view'): void {\r\n    this.currentModule = module;\r\n    this.modalMode = mode;\r\n    this.modalDisplay = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.modalDisplay = false;\r\n  }\r\n\r\n  saveChanges(): void {\r\n    if (!this.currentModule || !this.currentModule.idModule) {\r\n      console.log(\"No module selected or module ID is missing\");\r\n      return;\r\n    }\r\n    this.updateModule(this.currentModule.idModule, this.currentModule);\r\n  }\r\n\r\n  confirmDelete(moduleId: string): void {\r\n    const isConfirmed = confirm('Are you sure you want to delete this module?');\r\n    if (isConfirmed) {\r\n      this.deleteModule(moduleId);\r\n    }\r\n  }\r\n\r\n  deleteModule(moduleId: string): void {\r\n    this.serviceModule.deleteModule(moduleId).subscribe({\r\n      next: () => { \r\n        alert(moduleId)\r\n        console.log(\"Module deleted successfully\");\r\n        this.getAllModules();\r\n      },\r\n      error: (error) => {\r\n        console.error(\"Error deleting module\", error);\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllModules(): void {\r\n    this.serviceModule.getModules().subscribe({\r\n      next: (modules) => {\r\n        this.list = modules;\r\n        console.log('List of Modules updated:', this.list);\r\n        this.cdRef.detectChanges();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching modules', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateModule(moduleId: string, newData: any): void {\r\n    this.serviceModule.updateModule(moduleId, newData).subscribe({\r\n      next: (response) => {\r\n        console.log('Module Updated successfully', response);\r\n        this.getAllModules();\r\n      },\r\n      error: (error) => {\r\n        console.error('There was an error!', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  getModuleById(moduleId: string): void {\r\n    this.serviceModule.getModuleById(moduleId).subscribe({\r\n      next: (module) => {\r\n        console.log('Module Details:', module);\r\n        this.currentModule = module;\r\n      },\r\n      error: (error) => {\r\n        console.error('There was an error!', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectModuleForEdit(moduleId: string): void {\r\n    this.getModuleById(moduleId);\r\n    this.openModal(this.currentModule, 'edit');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}